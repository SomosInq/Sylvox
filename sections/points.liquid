
<style>
/* Section & Content Width */


/* ✅ Device visibility logic */
.hide-desktop { display: none; }
.hide-tablet { display: block; }
.hide-mobile { display: block; }

@media (max-width: 1024px) {
  .hide-desktop { display: block; }
  .hide-tablet { display: none; }
}

@media (max-width: 768px) {
  .hide-mobile { display: none; }
}

/* Hover effects */
.img-hover-zoom img:hover { transform: scale(1.1); }
.img-hover-grayscale img:hover { filter: grayscale(100%); }
.img-hover-fade img:hover { opacity: 0.7; }

/* Custom overlay */
.section-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0; left: 0;
}

/* Positioning */
.custom-section {
  position: relative;
  display: flex;
  flex-direction: column;
  justify-content: var(--vertical-align); /* will hold: flex-start | center | flex-end */
  overflow: hidden;
  height: 100%; /* or auto if you don’t want forced height */
}

.custom-section .content-wrap {
  position: relative;
  width: 60%;
  max-width: var(--content-max-width-desktop);
  margin-left: 30px;
}

@media (max-width: 768px) {
  .custom-section .content-wrap {
    position: relative;       /* normal flow */
    width: auto;               /* let max-width control it */
    max-width: var(--content-max-width-mobile);
    margin: 0 auto;            /* center it */
    padding-left: 0;
    margin-top: var(--content-padding-top-mobile, 20px); /* real push-down */
  }
}

#{{ section.settings.custom_id }} {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
}

@media (max-width: 768px) {
  #{{ section.settings.custom_id }} .bg-image {
    display: none; /* Hide the <img> */
  }

  #{{ section.settings.custom_id }} {
    height: auto !important;
  }
}



#shopify-section-{{ section.id }} .btn {
  width: 420px;
  margin: 20px 0 0 0;
}

#shopify-section-{{ section.id }} .subscribe-form > div {
  text-align: left;
  display: flex;
  height: 42px;
  padding: 12px 0px 12px 16px;
  align-items: center;
  flex-shrink: 0;
  border-radius: 9999px;
  background: #FFF;
}
#shopify-section-{{ section.id }} .subscribe-form > div label {
    display: block;
    width: 100%;
}


#shopify-section-{{ section.id }} .subscribe-form > div input,
#shopify-section-{{ section.id }} .subscribe-form > div textarea,
#shopify-section-{{ section.id }} .subscribe-form > div select {
  border: 0 solid;
  border-color: var(--color-border);
  max-width: 100%;
  padding: 8px 10px;
  border-radius: var(--input-radius);
}

#shopify-section-{{ section.id }} .subscribe-form > div button {
  display: flex;
  width: 124px;
  padding: 10px 42px 9px 40px;
  justify-content: center;
  align-items: center;
  border-radius: 9999px;
}

  #shopify-section-{{ section.id }} .subscribe-form {
    padding: 0 !important;
  margin-left: 0 !important;
    margin-top: 20px;
  height: 42px !important;
}

#shopify-section-{{ section.id }} .subscribe-form > div {
  text-align: left;
  display: flex;
  height: 42px !important;
  padding: 0; margin: 10px 0 0 0;
  align-items: center;
  flex-shrink: 0;
  border-radius: 9999px;
  background: #FFF;
  overflow: hidden;
  max-width: 100%;
  border: 5px solid #fff;
  width: 450px;
  margin-left: 0 !important;
}

#shopify-section-{{ section.id }} .subscribe-form > div input[type="email"] {
  flex: 1;
  border: none;
  padding: 0 20px;
  border-radius: 9999px 0 0 9999px;
  height: 100%;
  font-size: 16px;
}

#shopify-section-{{ section.id }} .subscribe-form > div button {
  height: 100%;
  width: auto;
  padding: 10px 24px;
  border-radius: 99999px;
  color: white;
  font-size: 16px;
  border: none;
  cursor: pointer;
  margin: 3px;
}

.bg-image{
  width:100%;
}
@media(max-width:1500px){
  .custom-section .content-wrap{
    top:15%;
    height:auto;
  }
  .title-tag{
    font-size:24px;
  }
  .sub-title{
    font-size:15px;
  }
  .points-section{
    width:80% !important;

  }
}

.bg-image-mobile {
  display: none;
}
@media (max-width: 768px) {
  .bg-image { display: none; }
  .bg-image-mobile { display: block; }
}
</style>

<div 
  id="{{ section.settings.custom_id }}"
  {% comment %} TODO {% endcomment %}
  class="points-section custom-section section_width_{{ section.settings.section_width }} section_content_width_{{ section.settings.section_content_width }} {{ section.settings.custom_class }}
  {% unless section.settings.show_on_desktop %} hide-desktop{% endunless %}
  {% unless section.settings.show_on_tablet %} hide-tablet{% endunless %}
  {% unless section.settings.show_on_mobile %} hide-mobile{% endunless %}"
  style="
  --vertical-align: {% if section.settings.vertical_align == 'center' %}center{% elsif section.settings.vertical_align == 'bottom' %}flex-end{% else %}flex-start{% endif %};
 margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px;
  padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px;
  --content-max-width-desktop: {{ section.settings.content_max_width_desktop }}px;
  --content-max-width-mobile: {{ section.settings.content_max_width_mobile }}px;
  --content-padding-top-mobile: {{ section.settings.content_padding_top_mobile }}px;
  --mobile-bg-width: {{ section.settings.bg_size_mobile }}%;
  ">
  {% if section.settings.overlay_color != blank %}
    <div class="section-overlay" style="background-color: {{ section.settings.overlay_color }}; opacity: {{ section.settings.overlay_opacity }};"></div>
  {% endif %}
  {% comment %} TODO {% endcomment %}
    <img 
  src="{{ section.settings.bg_image | img_url: 'master' }}"
  srcset="{{ section.settings.bg_image | img_url: 'master' }}"
  sizes="(max-width: 768px) 100vw, 100vw"
  loading="lazy"
  alt="Section Image"
  class="bg-image">
  {% if section.settings.bg_image_mobile != blank %}
  <img 
    src="{{ section.settings.bg_image_mobile | img_url: 'master' }}"
    class="bg-image-mobile"
    alt="Mobile Background"
    style="width: var(--mobile-bg-width); height: auto; display: block;">
{% endif %}
<div class="content-wrap"
  style="
    justify-content: {% if section.settings.vertical_align == 'center' %}center{% elsif section.settings.vertical_align == 'bottom' %}flex-end{% else %}flex-start{% endif %};
    {% if section.settings.horizontal_align == 'center' %}
      margin-left: auto; margin-right: auto;
    {% elsif section.settings.horizontal_align == 'left' %}
      margin-left: 0; margin-right: auto;
    {% elsif section.settings.horizontal_align == 'right' %}
      margin-left: auto; margin-right: 0;
    {% endif %}
  ">
    {% if section.settings.title != blank %}
      <{{ section.settings.title_tag }} class="title-tag" style="color: {{ section.settings.title_color }}; font-weight: {{ section.settings.title_weight }}; text-align: {{ section.settings.title_align }};">
        {{ section.settings.title }}
      </{{ section.settings.title_tag }}>
    {% endif %}

    {% if section.settings.text != blank %}
      <div style="text-align: {{ section.settings.text_align }}; color: {{ section.settings.text_color }}; font-weight: {{ section.settings.text_weight }};" class="sub-title">
        {{ section.settings.text }}
      </div>
    {% endif %}

    {% if section.settings.image != blank %}
      <div class="img-hover-{{ section.settings.image_hover }}">
        <img 
          src="{{ section.settings.image | img_url: 'master' }}"
          style="width: {{ section.settings.image_size }}%; aspect-ratio: {{ section.settings.image_ratio }};"
          {% if section.settings.lazyload %} loading="lazy" {% endif %} 
          alt="Section Image">
      </div>
    {% endif %}

    {% if section.settings.video_url != blank %}
      <video 
        src="{{ section.settings.video_url }}"
        {% if section.settings.video_autoplay %} autoplay{% endif %}
        {% if section.settings.video_mute %} muted{% endif %}
        {% if section.settings.video_loop %} loop{% endif %}
        poster="{{ section.settings.video_thumbnail | img_url: 'master' }}"
        controls>
      </video>
    {% endif %}

<!-- Subscribe -->

            <style>
  #form-message {
    display: none;
    padding: 12px 16px;
    border-radius: 4px;
    margin-bottom: 12px;
    max-width: 400px;
    background: #fff;
    border: 1px solid #ddd;
    font-size: 14px;
  }
  #form-message.error {
    color: #b00020;
    border-color: #b00020;
    background: #fff;
  }
  #form-message.success {
    color: #0f5132;
    border-color: #198754;
    background: #fff;
  }
  
  .modal {
    position: fixed;
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
    background: white;
    padding: 20px;
    border: 1px solid #ccc;
    width: 80%;
    max-height: 80%;
    overflow: auto;
    z-index: 10000;
  }
  .modal button.modal-close {
    position: sticky;
    top: 0;
    float: right;
    background: #eee;
    width: 100px; height: 100px;
    border: none;
    padding: 8px 12px;
    cursor: pointer;
    color: #DB4B97;
  }
</style>

<div id="form-message" style="margin-bottom:10px;"></div>


<div id="tc-modal" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%, -50%);
 background:white; padding:20px; border:1px solid #ccc; z-index:9999;">
  <p>
    You must agree to the 
    <a href="#" id="tos-link" style="text-decoration:underline; color:blue;">Terms of Service</a> 
and 
<a href="#" id="privacy-link" style="text-decoration:underline; color:blue;">Privacy Policy</a>

    to subscribe.
  </p>
  <button id="accept-tc">Accept</button>
</div>


<div id="tos-modal" class="modal"  style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%, -50%);
 background:white; padding:20px; border:1px solid #ccc; width:80%; max-height:80%; overflow:auto; z-index:10000;">
  <button id="close-tos" class="modal-close">Close</button>
  <div id="tos-content">
    <p>Loading...</p>
  </div>
</div>


<div id="privacy-modal" class="modal" style="display:none; position:fixed; top:50%; left:50%; transform:translate(-50%, -50%);
 background:white; padding:20px; border:1px solid #ccc; width:80%; max-height:80%; overflow:auto; z-index:10000;">
  <button id="close-privacy" class="modal-close">Close</button>
  <div id="privacy-content">
    <p>Loading...</p>
  </div>
</div>


<form id="subscribe-form" class="subscribe-form">
  <input id="email-input" type="email" name="contact[email]" placeholder="Enter your email" required>
  <button type="button" id="subscribe-btn">Subscribe</button>
</form>

{% assign terms_url = pages[section.settings.terms_page].url %}
{% assign privacy_url = pages[section.settings.privacy_page].url %}

<script>
  // Elements
  const subscribeBtn = document.getElementById('subscribe-btn');
  const emailInput = document.getElementById('email-input');
  const formMessage = document.getElementById('form-message');
  const tcModal = document.getElementById('tc-modal');
  const acceptTc = document.getElementById('accept-tc');
  const subscribeForm = document.getElementById('subscribe-form');

  const tosLink = document.getElementById('tos-link');
  const privacyLink = document.getElementById('privacy-link');
  const tosModal = document.getElementById('tos-modal');
  const privacyModal = document.getElementById('privacy-modal');
  const tosContent = document.getElementById('tos-content');
  const privacyContent = document.getElementById('privacy-content');
  const closeTos = document.getElementById('close-tos');
  const closePrivacy = document.getElementById('close-privacy');

  // ✅ URLs resolved by Liquid
  const termsURL = '{{ terms_url }}';
  const privacyURL = '{{ privacy_url }}';

  // Click subscribe
  subscribeBtn.addEventListener('click', function() {
    const email = emailInput.value.trim();
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

    // Reset message
    formMessage.className = '';
    formMessage.style.display = 'block';

    if (!emailRegex.test(email)) {
      formMessage.classList.add('error');
      formMessage.textContent = "Please submit a valid email address.";
      return;
    }

    // Valid email → hide any message → show T&C modal
    formMessage.style.display = 'none';
    formMessage.textContent = '';
    tcModal.style.display = 'block';
  });

  // Accept T&C → submit
  acceptTc.addEventListener('click', function() {
    tcModal.style.display = 'none';
    formMessage.className = '';
    formMessage.classList.add('success');
    formMessage.textContent = "Thank you! Your email has been submitted.";
    formMessage.style.display = 'block';
    subscribeForm.submit();
  });

  // Open Terms modal
  tosLink.addEventListener('click', function(e) {
    e.preventDefault();
    tcModal.style.display = 'none';
    tosContent.innerHTML = '<p>Loading Terms of Service...</p>';
    tosModal.style.display = 'block';

    fetch(termsURL)
      .then(response => response.text())
      .then(html => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        const mainContent = doc.querySelector('.legal-content') || doc.querySelector('main') || doc.body;
        if (mainContent) {
          tosContent.innerHTML = mainContent.innerHTML;
        } else {
          tosContent.innerHTML = '<p>Could not load Terms content.</p>';
        }
      })
      .catch(err => {
        tosContent.innerHTML = '<p>Failed to load Terms of Service.</p>';
      });
  });

  // Open Privacy modal
  privacyLink.addEventListener('click', function(e) {
    e.preventDefault();
    tcModal.style.display = 'none';
    privacyContent.innerHTML = '<p>Loading Privacy Policy...</p>';
    privacyModal.style.display = 'block';

    fetch(privacyURL)
      .then(response => response.text())
      .then(html => {
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');
        const mainContent = doc.querySelector('.legal-content') || doc.querySelector('main') || doc.body;
        if (mainContent) {
          privacyContent.innerHTML = mainContent.innerHTML;
        } else {
          privacyContent.innerHTML = '<p>Could not load Privacy content.</p>';
        }
      })
      .catch(err => {
        privacyContent.innerHTML = '<p>Failed to load Privacy Policy.</p>';
      });
  });

  // Close modals → return to parent T&C modal
  closeTos.addEventListener('click', function() {
    tosModal.style.display = 'none';
    tcModal.style.display = 'block';
  });

  closePrivacy.addEventListener('click', function() {
    privacyModal.style.display = 'none';
    tcModal.style.display = 'block';
  });
</script>





  </div>

</div>



{% schema %}
{
  "name": "Points",
  "settings": [
    {
      "type": "select",
      "id": "section_width",
      "label": "Section Width",
      "default": "standard",
      "options": [
        { "value": "standard", "label": "50% Width" },
        { "value": "full", "label": "Full Width" }
      ]
    },
    {
      "type": "select",
      "id": "section_content_width",
      "label": "Content Width",
      "default": "standard",
      "options": [
        { "value": "standard", "label": "50% Width" },
        { "value": "full", "label": "Full Width" }
      ]
    },
    
    {
      "type": "image_picker",
      "id": "bg_image",
      "label": "Background Image"
    },
    
    {
      "type": "select",
      "id": "bg_size",
      "label": "Background Size",
      "default": "cover",
      "options": [
        { "value": "cover", "label": "Cover" },
        { "value": "contain", "label": "Contain" },
        { "value": "auto", "label": "Auto" }
      ]
    },
    {
      "type": "image_picker",
      "id": "bg_image_mobile",
      "label": "Mobile Background Image"
    },
{
  "type": "range",
  "id": "bg_size_mobile",
  "label": "Mobile Background Width (%)",
  "min": 10,
  "max": 100,
  "step": 5,
  "default": 100
},
    {
      "type": "color",
      "id": "bg_color",
      "label": "Background Color",
      "default": "#ffffff"
    },
    {
      "type": "range",
      "id": "content_max_width_desktop",
      "label": "Content Max Width (Desktop) px",
      "min": 200,
      "max": 2000,
      "step": 50,
      "default": 1200
    },
    {
      "type": "range",
      "id": "content_max_width_mobile",
      "label": "Content Max Width (Mobile) px",
      "min": 200,
      "max": 1200,
      "step": 50,
      "default": 600
    },
    {
      "type": "page",
      "id": "terms_page",
      "label": "Terms of Service Page"
    },
    {
      "type": "page",
      "id": "privacy_page",
      "label": "Privacy Policy Page"
    },
    {
      "type": "checkbox",
      "id": "show_on_desktop",
      "label": "Show on Desktop",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_on_tablet",
      "label": "Show on Tablet",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_on_mobile",
      "label": "Show on Mobile",
      "default": true
    },
    {
      "type": "range",
      "id": "margin_top",
      "label": "Margin Top",
      "default": 0,
      "min": 0,
      "max": 200,
      "step": 5
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "label": "Margin Bottom",
      "default": 0,
      "min": 0,
      "max": 200,
      "step": 5
    },
    {
      "type": "range",
      "id": "margin_left",
      "label": "Margin Left",
      "default": 0,
      "min": 0,
      "max": 200,
      "step": 5
    },
    {
      "type": "range",
      "id": "margin_right",
      "label": "Margin Right",
      "default": 0,
      "min": 0,
      "max": 200,
      "step": 5
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Padding Top",
      "default": 0,
      "min": 0,
      "max": 200,
      "step": 5
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Padding Bottom",
      "default": 0,
      "min": 0,
      "max": 200,
      "step": 5
    },
    {
      "type": "range",
      "id": "padding_left",
      "label": "Padding Left",
      "default": 0,
      "min": 0,
      "max": 200,
      "step": 5
    },
    {
      "type": "range",
      "id": "padding_right",
      "label": "Padding Right",
      "default": 0,
      "min": 0,
      "max": 200,
      "step": 5
    },
    {
  "type": "range",
  "id": "content_padding_top_mobile",
  "label": "Content Top Padding (Mobile)",
  "min": 0,
  "max": 200,
  "step": 5,
  "default": 20
},
    {
      "type": "text",
      "id": "title",
      "label": "Title"
    },
    {
  "type": "text",
  "id": "checkbox_label",
  "label": "Checkbox Label Text",
  "default": "I agree to the"
},
{
  "type": "url",
  "id": "terms_url",
  "label": "Terms of Service URL"
},
{
  "type": "url",
  "id": "privacy_url",
  "label": "Privacy Policy URL"
},
    {
      "type": "select",
      "id": "vertical_align",
      "label": "Vertical Content Alignment",
      "default": "center",
      "options": [
        { "value": "top", "label": "Top" },
        { "value": "center", "label": "Center" },
        { "value": "bottom", "label": "Bottom" }
      ]
    },
    {
      "type": "select",
      "id": "title_tag",
      "label": "Title Tag",
      "default": "h2",
      "options": [
        { "value": "h1", "label": "H1" },
        { "value": "h2", "label": "H2" },
        { "value": "h3", "label": "H3" },
        { "value": "h4", "label": "H4" },
        { "value": "h5", "label": "H5" },
        { "value": "h6", "label": "H6" },
        { "value": "p", "label": "Body" },
        { "value": "i", "label": "Italic" }
      ]
    },
    {
      "type": "color",
      "id": "title_color",
      "label": "Title Color",
      "default": "#000000"
    },
    {
      "type": "text",
      "id": "title_weight",
      "label": "Title Weight",
      "default": "700"
    },
    {
      "type": "select",
      "id": "title_align",
      "label": "Title Alignment",
      "default": "left",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ]
    },
    {
      "type": "richtext",
      "id": "text",
      "label": "Text"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text Color",
      "default": "#000000"
    },
    {
      "type": "text",
      "id": "text_weight",
      "label": "Text Weight",
      "default": "400"
    },
    {
      "type": "select",
      "id": "text_align",
      "label": "Text Alignment",
      "default": "left",
      "options": [
        { "value": "left", "label": "Left" },
        { "value": "center", "label": "Center" },
        { "value": "right", "label": "Right" }
      ]
    },
{
  "type": "select",
  "id": "horizontal_align",
  "label": "Horizontal Content Alignment",
  "default": "center",
  "options": [
    { "value": "left", "label": "Left" },
    { "value": "center", "label": "Center" },
    { "value": "right", "label": "Right" }
  ]
},
    {
      "type": "subscribe",
  "id": "subscribe",
  "type": "color",
  "id": "subscribe_button_color",
  "label": "Subscribe button color",
  "default": "#DB4B97"
},
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image"
    },
    {
      "type": "range",
      "id": "image_size",
      "label": "Image Size (%)",
      "min": 10,
      "max": 100,
      "default": 100
    },
    {
      "type": "select",
      "id": "image_ratio",
      "label": "Image Ratio",
      "default": "1/1",
      "options": [
        { "value": "1/1", "label": "Square" },
        { "value": "16/9", "label": "Landscape" },
        { "value": "9/16", "label": "Portrait" }
      ]
    },
    {
      "type": "checkbox",
      "id": "lazyload",
      "label": "Lazy Load Image",
      "default": true
    },
    {
      "type": "select",
      "id": "image_hover",
      "label": "Image Hover Effect",
      "default": "zoom",
      "options": [
        { "value": "zoom", "label": "Zoom" },
        { "value": "grayscale", "label": "Grayscale" },
        { "value": "fade", "label": "Fade" }
      ]
    },
    {
      "type": "color",
      "id": "overlay_color",
      "label": "Overlay Color"
    },
    {
      "type": "range",
      "id": "overlay_opacity",
      "label": "Overlay Opacity",
      "min": 0,
      "max": 1,
      "step": 0.1,
      "default": 0.5
    },
    {
      "type": "url",
      "id": "video_url",
      "label": "Video URL"
    },
    {
      "type": "checkbox",
      "id": "video_autoplay",
      "label": "Autoplay Video"
    },
    {
      "type": "checkbox",
      "id": "video_mute",
      "label": "Mute Video"
    },
    {
      "type": "checkbox",
      "id": "video_loop",
      "label": "Loop Video"
    },
    {
      "type": "image_picker",
      "id": "video_thumbnail",
      "label": "Custom Thumbnail"
    },
    {
      "type": "text",
      "id": "custom_class",
      "label": "Custom Class"
    },
    {
      "type": "text",
      "id": "custom_id",
      "label": "Custom ID"
    },
    {
      "type": "textarea",
      "id": "json_blocks",
      "label": "JSON Blocks"
    }
  ],
  "presets": [
    {
      "name": "Points",
      "category": "Somos Custom"
    }
  ]
}
{% endschema %}

