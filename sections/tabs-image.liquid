
{% style %}
    .tabs-image {
      text-align: center;
    }

    .tabs-image-section{
        font-family: BasicSans;
    }

    .tabs-image-section p{
      font-weight: 400;
    }

    .tabs-image__header{
        text-align: center;
        margin-bottom: 24px;
    }

    .tabs-image__header h2{
        font-size: 48px;
        font-family: BasicSans;
        font-weight: 400;
    }
  
    .image-display {
      margin-bottom: 32px;
    }
  
    .image-display img {
      width: 100%;
      height: auto;
      max-height: 600px;
      object-fit: cover;
      transition: opacity 0.3s ease-in-out;
      border-radius: {{section.settings.img_radius}}px;
    }
  
    .tabs {
      display: flex;
      justify-content: center;
      position: relative;
      margin-bottom: 20px;
      border-bottom: 2px solid #9d9fa1;
    }
  
    .tab {
      padding: 0 20px 20px 20px;
      background-color: transparent;
      border: none;
      cursor: pointer;
      font-size: 20px;
      font-family: BasicSans !Important;
      font-weight: 400;
      position: relative;
      transition: all 0.3s ease;
      width: calc(100% / 3);
      color: #2E2E2E;
    }
  
    .tabs-image__header > *{
      margin: 0;
    }
  
  
    .tab.active, .tab:hover {
      color:rgba(0, 0, 0, 1);
      background-color: transparent;
      font-weight: 700;
    }
  
    .tab-content .tab-description {
      display: none; /* Hide all descriptions by default */
    }
  
    .tab-content .tab-description.active {
      display: block; /* Show only the active description */
    }
  
    .tab-description p{
      margin-left:auto;
      margin-right: auto;
      color: rgba(38, 38, 38, 0.65);
      font-size: 16px;
      max-width: 540px;
    }
  
    .underline {
      position: absolute;
      bottom: -2px;
      left: 0;
      height: 2px;
      background-color: rgba(46, 46, 46, 1);
      transition: transform 0.3s ease;
      transform: translateX(0);
      width: calc(100% / 3);
    }
  
    @media screen and (min-width: 750px) {
      .tab-content .tab-description{
        max-width: 80%;
        margin: auto;
      }
    }
  
    @media screen and (max-width: 749px) {
      .tabs {
        flex-direction: column;
        border-bottom: none;
      }
  
      .tab {
        width: 100%;
        text-align: left;
        padding: 15px 0;
        font-size: 16px;
        color: #767676;
      }
  
      .tab.active, .tab:hover{
          color: #000;
          font-weight: 700;
      }
  
      .tab svg {
        height: calc(var(--font-heading-scale) * 0.6rem);
        position: absolute;
        right: 1.5rem;
        top: calc(50% - 0.2rem);
        transform: rotate(-90deg);
        transition: transform 0.3s ease;
      }
  
      .tab-content {
      max-height: 0;
      overflow: hidden;
      opacity: 0;
      padding: 0 10px;
      transition: max-height 0.3s ease, opacity 0.3s ease, padding 0.3s ease;
      text-align: center;
      font-size: 12px;
      }
  
      .tab-content.active {
      max-height: max-content;
      opacity: 1;
      padding: 10px;
  
      }
  
      .tab.active svg{
          transform: rotate(0);
      }
  
      .image-display img {
        height: auto;
      }
  
  
  
      .underline {
        display: none;
      }
    }
  
  {% endstyle %}
  
  <div class="section tabs-image-section">
    <div class="title-wrapper tabs-image__header {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
      {% if section.settings.title != blank %}
        <h2 class="h1 body-style">{{ section.settings.title }}</h2>
      {% endif %}
  
      {% if section.settings.paragraph != blank %}
        <p>{{ section.settings.paragraph }}</p>
      {% endif %}
    </div>
  
    <div class="tabs-image sm-max:hidden">
      <div class="image-display {% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}">
        <img id="tab-image" src="{{ section.blocks[0].settings.image |  image_url  }}" alt="Tab Image">
      </div>
  
      <div class="tabs">
        {% for block in section.blocks %}
          <button
            class="tab {% if forloop.first %}active{% endif %}"
            onclick="changeTab('{{ block.settings.image |  image_url }}', '{{ block.id }}', this)"
          >
            {{ block.settings.title }}
          </button>
        {% endfor %}
        <div class="underline" style="display: block;"></div>
      </div>
  
      <div class="tab-content">
        {% for block in section.blocks %}
          <div class="tab-description {% if forloop.first %}active{% endif %}" id="desc-{{ block.id }}">
            {{ block.settings.description }}
          </div>
        {% endfor %}
      </div>
    </div>
    <div class="tabs-mobile-image md:hidden lg:hidden">
      {% for block in section.blocks %}
        <!-- Accordion Section -->
        <div class="tab-mobile">
          <button class="tab {% if forloop.first %}active{% endif %}" onclick="toggleAccordion(this)">
            {{ block.settings.title }}
            {% comment %} {% render 'icon-caret' %} {% endcomment %}
            {% render 'icon-caret' %}
          </button>

          <div class="tab-content {% if forloop.first %}active{% endif %}">
            <!-- Image Inside Accordion -->
            <div class="image-display">
              <img src="{{ block.settings.image | image_url }}" alt="Tab Image">
            </div>
            <!-- Description Inside Accordion -->
            <div class="description">
              {{ block.settings.description }}
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
  
  <script>
    function changeTab(imageSrc, descId, tabElement) {
      // Change the image
      const img = document.getElementById('tab-image');
      img.style.opacity = '0';
      setTimeout(() => {
        img.src = imageSrc;
        img.style.opacity = '1';
      }, 300);
  
      // Update active tab
      const tabs = document.querySelectorAll('.tab');
      tabs.forEach((tab) => tab.classList.remove('active'));
      tabElement.classList.add('active');
  
      // Move underline
      const underline = document.querySelector('.underline');
      const tabOffset = tabElement.offsetLeft;
      underline.style.transform = `translateX(${tabOffset}px)`;
  
      // Show the corresponding description
      const descriptions = document.querySelectorAll('.tab-description');
      descriptions.forEach((desc) => desc.classList.remove('active'));
  
      const activeDesc = document.getElementById(`desc-${descId}`);
      if (activeDesc) {
        activeDesc.classList.add('active');
      }
    }
  
    function toggleAccordion(tabElement) {
      // Toggle the active class for the current tab
      const tabContent = tabElement.nextElementSibling;
      const isActive = tabContent.classList.contains('active');
  
      // Collapse all other accordions
      const allContents = document.querySelectorAll('.tab-content');
      allContents.forEach((content) => content.classList.remove('active'));
  
      const allTabs = document.querySelectorAll('.tab');
      allTabs.forEach((tab) => tab.classList.remove('active'));
  
      // Expand/collapse the clicked tab
      if (!isActive) {
        tabElement.classList.add('active');
        tabContent.classList.add('active');
      }
    }
  </script>
  
  {% schema %}
  {
    "name": "Tabs Image",
    "settings": [
      {
        "type": "text",
        "id": "title",
        "label": "Heading",
        "default": "Features"
      },
      {
        "type": "inline_richtext",
        "id": "paragraph",
        "label": "Description"
      },
      {
        "type": "range",
        "id": "img_radius",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Image border radius",
        "default": 8
      },
      {
        "type": "header",
        "content": "t:sections.all.padding.section_padding_heading"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 36
      },
      {
        "type": "range",
        "id": "padding_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding bottom",
        "default": 36
      }
    ],
    "blocks": [
      {
        "type": "tab",
        "name": "Tab",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Tab Title"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Tab Image"
          },
          {
            "type": "richtext",
            "id": "description",
            "label": "Tab Description"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "Tabs with image"
      }
    ]
  }
  {% endschema %}
  