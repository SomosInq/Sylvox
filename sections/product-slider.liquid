{% schema %}
{
  "name": "Product Slider",
  "settings": [
    {
      "type": "select",
      "id": "section_width",
      "label": "Section Width",
      "default": "standard",
      "options": [
        { "value": "standard", "label": "50% Width" },
        { "value": "full", "label": "Full Width" }
      ]
    },
    {
      "type": "image_picker",
      "id": "left_image",
      "label": "Left Side Image"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Customer Favorites"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Best Sellers"
    },
    {
      "type": "url",
      "id": "shop_all_url",
      "label": "Shop All Button URL"
    },
    {
      "type": "checkbox",
      "id": "show_arrows_mobile",
      "label": "Show arrows on Mobile",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_arrows_desktop",
      "label": "Show arrows on Desktop",
      "default": true
    },
    { "type": "range", "id": "padding_top", "label": "Padding top (Desktop)", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_bottom", "label": "Padding bottom (Desktop)", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_top_mobile", "label": "Padding top (Mobile)", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_bottom_mobile", "label": "Padding bottom (Mobile)", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_left", "label": "Padding left", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_right", "label": "Padding right", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_top", "label": "Margin top", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_bottom", "label": "Margin bottom", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_left", "label": "Margin left", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_right", "label": "Margin right", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Collection Tab",
      "settings": [
        {
          "type": "text",
          "id": "tab_name",
          "label": "Tab Label",
          "default": "Best Sellers"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Product Slider",
      "category": "Somos Custom"
    }
  ]
}
{% endschema %}


<style>
  .collection-tabs-section {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
    padding-left: {{ section.settings.padding_left }}px;
    padding-right: {{ section.settings.padding_right }}px;
    margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px;
  }

  @media (max-width: 768px) {
    .collection-tabs-section {
      padding-top: {{ section.settings.padding_top_mobile }}px;
      padding-bottom: {{ section.settings.padding_bottom_mobile }}px;
    }
  }
</style>

<section class="collection-tabs-section section_width_{{ section.settings.section_width }}" style="padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px; margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px padding: {{ section.settings.padding_top_mobile }}px {{ section.settings.padding_bottom_mobile }}px">
  <div class="left-image">
    {% if section.settings.left_image != blank %}
      <img src="{{ section.settings.left_image | image_url: width: 600 }}" alt="Left Image">
    {% endif %}
  </div>

  {% if section.settings.show_arrows_desktop == false %}
  <style>
    @media (min-width: 769px) {
      .collection-tabs-section .flickity-prev-next-button {
        display: none !important;
      }
    }
  </style>
{% endif %}

{% if section.settings.show_arrows_mobile == false %}
  <style>
    @media (max-width: 768px) {
      .collection-tabs-section .flickity-prev-next-button {
        display: none !important;
      }
    }
  </style>
{% endif %}

  <div class="right-content">
    <div class="tab-header">
      <div class="tab-title-group">
        <div class="tab-titles">
          <h3>{{ section.settings.subheading }}</h3>
          <h2>{{ section.settings.heading }}</h2>
        </div>
        {% if section.settings.shop_all_url %}
          <a href="{{ section.settings.shop_all_url }}" class="shop-all-btn">Shop All</a>
        {% endif %}
      </div>
    </div>

    <div class="tab-buttons">
      {% for block in section.blocks %}
        <button
          class="{% if forloop.first %}active{% endif %}"
          data-tab="tab-{{ forloop.index }}">
          {{ block.settings.tab_name }}
        </button>
      {% endfor %}
    </div>

    {% for block in section.blocks %}
      {% assign block_collection = collections[block.settings.collection] %}
      <div
        class="product-carousel js-flickity {% if forloop.first %}active{% endif %}"
        data-tab="tab-{{ forloop.index }}"
        data-flickity-options='{
          "contain": true,
          "wrapAround": true,
          "pageDots": false
        }'
        data-arrows-mobile="{{ section.settings.show_arrows_mobile }}"
        data-arrows-desktop="{{ section.settings.show_arrows_desktop }}"
      >
        {% if block_collection != blank %}
          {% for product in block_collection.products limit: 10 %}
            <div class="product-card">
              <a href="{{ product.url }}">
                <img src="{{ product.featured_image | image_url: width: 300 }}" alt="{{ product.title }}">
                <h4>{{ product.title }}</h4>
                <p>From {{ product.price | money }}</p>
              </a>
            </div>
          {% endfor %}
        {% else %}
          <p>No products found in this collection.</p>
        {% endif %}
      </div>
    {% endfor %}
  </div>
</section>

{% javascript %}
function initCollectionTabsSlider(section) {
  if (!section) return;

  const buttons = section.querySelectorAll('.tab-buttons button');
  const carousels = section.querySelectorAll('.product-carousel');

  buttons.forEach(button => {
    button.addEventListener('click', () => {
      const targetTab = button.dataset.tab;

      buttons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');

      carousels.forEach(carousel => {
        if (carousel.dataset.tab === targetTab) {
          carousel.classList.add('active');
        } else {
          carousel.classList.remove('active');
        }
      });
    });
  });

  carousels.forEach(carousel => {
    initFlickityWithViewport(carousel);
  });

  // Debounced resize handling
  let resizeTimeout;
  window.addEventListener('resize', () => {
    clearTimeout(resizeTimeout);
    resizeTimeout = setTimeout(() => {
      carousels.forEach(carousel => {
        maybeReinitFlickity(carousel);
      });
    }, 200);
  });
}

function initFlickityWithViewport(carousel) {
  const flickityOptions = JSON.parse(carousel.getAttribute('data-flickity-options'));
  const showArrowsMobile = carousel.dataset.arrowsMobile === 'true';
  const showArrowsDesktop = carousel.dataset.arrowsDesktop === 'true';
  const isMobile = window.matchMedia("(max-width: 768px)").matches;

  flickityOptions.prevNextButtons = isMobile ? showArrowsMobile : showArrowsDesktop;

  // Store which mode it's using
  carousel._flickityBreakpoint = isMobile ? 'mobile' : 'desktop';

  // Destroy any old
  if (carousel.flickityInstance) {
    carousel.flickityInstance.destroy();
  }

  // Create new
  carousel.flickityInstance = new Flickity(carousel, flickityOptions);
}

function maybeReinitFlickity(carousel) {
  const isMobile = window.matchMedia("(max-width: 768px)").matches;
  const currentBreakpoint = isMobile ? 'mobile' : 'desktop';

  if (carousel._flickityBreakpoint !== currentBreakpoint) {
    initFlickityWithViewport(carousel);
  }
}

function loadFlickityAndInitSection(section) {
  if (typeof Flickity === 'undefined') {
    const script = document.createElement('script');
    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';
    script.onload = () => initCollectionTabsSlider(section);
    document.head.appendChild(script);
  } else {
    initCollectionTabsSlider(section);
  }
}

document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.collection-tabs-section').forEach(section => {
    loadFlickityAndInitSection(section);
  });
});

document.addEventListener('shopify:section:load', (event) => {
  const section = event.target.querySelector('.collection-tabs-section');
  loadFlickityAndInitSection(section);
});
{% endjavascript %}
