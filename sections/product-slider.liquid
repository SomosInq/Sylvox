{% schema %}
{
  "name": "Collection Tabs Slider",
  "settings": [
    {
      "type": "image_picker",
      "id": "left_image",
      "label": "Left Side Image"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Customer Favorites"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Best Sellers"
    },
    {
      "type": "url",
      "id": "shop_all_url",
      "label": "Shop All Button URL"
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Collection Tab",
      "settings": [
        {
          "type": "text",
          "id": "tab_name",
          "label": "Tab Label",
          "default": "Best Sellers"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Tabs Slider",
      "category": "Custom"
    }
  ]
}
{% endschema %}

{% stylesheet %}
.collection-tabs-section {
  display: grid;
  grid-template-columns: 1fr 2fr;
  gap: 2rem;
  padding: 2rem 0;
}

.left-image {
  display: flex;
  justify-content: center;
  align-items: center;
}

.left-image img {
  width: 100%;
  max-width: 500px;
  border-radius: 8px;
}

.right-content {
  display: flex;
  flex-direction: column;
}

.tab-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.tab-header h3 {
  margin: 0;
  font-size: 1rem;
  color: #666;
}

.tab-header h2 {
  margin: 0;
  font-size: 2rem;
}

.shop-all-btn {
  text-decoration: none;
  padding: 0.5rem 1rem;
  background-color: #000;
  color: #fff;
  border-radius: 4px;
  margin-top: 1rem;
  align-self: flex-end;
}

.tab-buttons {
  display: flex;
  gap: 1rem;
  margin: 1rem 0;
}

.tab-buttons button {
  padding: 0.5rem 1rem;
  background: none;
  border: 1px solid #ddd;
  border-radius: 5px;
  cursor: pointer;
  font-weight: 600;
}

.tab-buttons button.active {
  background-color: #000;
  color: #fff;
}

.product-carousel {
  display: none;
}

.product-carousel.active {
  display: block;
}

.flickity-viewport {
  overflow: hidden;
}

.flickity-slider > .product-card {
  width: 250px;
  margin-right: 20px;
}

.product-card img {
  width: 100%;
  border-radius: 8px;
}
{% endstylesheet %}

<section class="collection-tabs-section">
  <div class="left-image">
    {% if section.settings.left_image != blank %}
      <img src="{{ section.settings.left_image | image_url: width: 600 }}" alt="Left Image">
    {% endif %}
  </div>

  <div class="right-content">
    <div class="tab-header">
      <div>
        <h3>{{ section.settings.subheading }}</h3>
        <h2>{{ section.settings.heading }}</h2>
      </div>
    </div>

    <div class="tab-buttons">
      {% for block in section.blocks %}
        <button
          class="{% if forloop.first %}active{% endif %}"
          data-tab="tab-{{ forloop.index }}">
          {{ block.settings.tab_name }}
        </button>
      {% endfor %}
    </div>

    {% for block in section.blocks %}
      {% assign collection = collections[block.settings.collection] %}
      <div class="product-carousel js-flickity {% if forloop.first %}active{% endif %}" data-tab="tab-{{ forloop.index }}" data-flickity-options='{"contain": true, "wrapAround": true, "pageDots": false}'>
        {% for product in collection.products limit: 10 %}
          <div class="product-card">
            <a href="{{ product.url }}">
              <img src="{{ product.featured_image | image_url: width: 300 }}" alt="{{ product.title }}">
              <h4>{{ product.title }}</h4>
              <p>From {{ product.price | money }}</p>
            </a>
          </div>
        {% endfor %}
      </div>
    {% endfor %}

    {% if section.settings.shop_all_url %}
      <a href="{{ section.settings.shop_all_url }}" class="shop-all-btn">Shop All</a>
    {% endif %}
  </div>
</section>

{% javascript %}
  document.addEventListener('DOMContentLoaded', function () {
    const buttons = document.querySelectorAll('.tab-buttons button');
    const carousels = document.querySelectorAll('.product-carousel');

    buttons.forEach(button => {
      button.addEventListener('click', function () {
        const tab = this.dataset.tab;

        buttons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');

        carousels.forEach(carousel => {
          if (carousel.dataset.tab === tab) {
            carousel.classList.add('active');
          } else {
            carousel.classList.remove('active');
          }
        });
      });
    });
  });

  if (typeof Flickity === 'undefined') {
    const flickityScript = document.createElement('script');
    flickityScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';
    document.head.appendChild(flickityScript);
  }
{% endjavascript %}
