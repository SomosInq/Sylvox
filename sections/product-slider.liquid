{% schema %}
{
  "name": "Collection Tabs Slider",
  "settings": [
    {
      "type": "image_picker",
      "id": "left_image",
      "label": "Left Side Image"
    },
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Customer Favorites"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Best Sellers"
    },
    {
      "type": "url",
      "id": "shop_all_url",
      "label": "Shop All Button URL"
    },
    {
      "type": "checkbox",
      "id": "show_arrows",
      "label": "Show slider arrows",
      "default": true
    },
    {
      "type": "select",
      "id": "section_width",
      "label": "Section Width",
      "default": "standard",
      "options": [
        {
          "value": "standard",
          "label": "50% Width"
        },
        {
          "value": "full",
          "label": "Full Width"
        }
      ]
    }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Collection Tab",
      "settings": [
        {
          "type": "text",
          "id": "tab_name",
          "label": "Tab Label",
          "default": "Best Sellers"
        },
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Tabs Slider",
      "category": "Somos Custom"
    }
  ]
}
{% endschema %}

{% stylesheet %}
.collection-tabs-section {
  display: grid;
  grid-template-columns: 1fr 2fr;
  gap: 2rem;
  padding: 2rem 0;
  margin: 0 auto;
}

.collection-tabs-section.standard {
  max-width: 1200px;
}

.collection-tabs-section.full {
  max-width: 100%;
}

.left-image img {
  width: 100%;
  max-width: 500px;
  border-radius: 8px;
}

.right-content {
  display: flex;
  flex-direction: column;
}

.tab-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.tab-title-group {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.tab-header h3 {
  margin: 0;
  font-size: 0.95rem;
  color: #666;
}

.tab-header h2 {
  margin: 0;
  font-size: 2rem;
}

.shop-all-btn {
  text-decoration: none;
  padding: 0.4rem 0.9rem;
  background-color: #000;
  color: #fff;
  border-radius: 4px;
  font-size: 0.85rem;
}

.tab-buttons {
  display: flex;
  gap: 2rem;
  margin: 1rem 0 1.5rem;
  border-bottom: 2px solid #e5e5e5;
}

.tab-buttons button {
  padding: 0.5rem 0;
  background: none;
  border: none;
  border-bottom: 2px solid transparent;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  color: #333;
}

.tab-buttons button.active {
  border-bottom: 2px solid #000;
  color: #000;
}

.product-carousel {
  display: none;
}

.product-carousel.active {
  display: block;
}

.flickity-viewport {
  overflow: hidden;
}

.flickity-slider > .product-card {
  width: 220px;
  margin-right: 20px;
}

.product-card img {
  width: 100%;
  border-radius: 8px;
}

.product-card h4 {
  font-size: 0.9rem;
  margin: 0.5rem 0 0.3rem;
}

.product-card p {
  font-size: 0.85rem;
  color: #666;
  margin: 0;
}
{% endstylesheet %}

<section class="collection-tabs-section {{ section.settings.section_width }}">
  <div class="left-image">
    {% if section.settings.left_image != blank %}
      <img src="{{ section.settings.left_image | image_url: width: 600 }}" alt="Left Image">
    {% endif %}
  </div>

  <div class="right-content">
    <div class="tab-header">
      <div class="tab-title-group">
        <div>
          <h3>{{ section.settings.subheading }}</h3>
          <h2>{{ section.settings.heading }}</h2>
        </div>
        {% if section.settings.shop_all_url %}
          <a href="{{ section.settings.shop_all_url }}" class="shop-all-btn">Shop All</a>
        {% endif %}
      </div>
    </div>

    <div class="tab-buttons">
      {% for block in section.blocks %}
        <button
          class="{% if forloop.first %}active{% endif %}"
          data-tab="tab-{{ forloop.index }}">
          {{ block.settings.tab_name }}
        </button>
      {% endfor %}
    </div>

    {% for block in section.blocks %}
      {% assign block_collection = collections[block.settings.collection] %}
      <div
        class="product-carousel js-flickity {% if forloop.first %}active{% endif %}"
        data-tab="tab-{{ forloop.index }}"
        data-flickity-options='{
          "contain": true,
          "wrapAround": true,
          "pageDots": false,
          "prevNextButtons": {{ section.settings.show_arrows }}
        }'
      >
        {% if block_collection != blank %}
          {% for product in block_collection.products limit: 10 %}
            <div class="product-card">
              <a href="{{ product.url }}">
                <img src="{{ product.featured_image | image_url: width: 300 }}" alt="{{ product.title }}">
                <h4>{{ product.title }}</h4>
                <p>From {{ product.price | money }}</p>
              </a>
            </div>
          {% endfor %}
        {% else %}
          <p>No products found in this collection.</p>
        {% endif %}
      </div>
    {% endfor %}
  </div>
</section>


{% javascript %}
function initCollectionTabsSlider(section) {
  if (!section) return;

  const buttons = section.querySelectorAll('.tab-buttons button');
  const carousels = section.querySelectorAll('.product-carousel');

  // Attach tab switching
  buttons.forEach(button => {
    button.addEventListener('click', () => {
      const targetTab = button.dataset.tab;

      buttons.forEach(btn => btn.classList.remove('active'));
      button.classList.add('active');

      carousels.forEach(carousel => {
        if (carousel.dataset.tab === targetTab) {
          carousel.classList.add('active');
        } else {
          carousel.classList.remove('active');
        }
      });
    });
  });

  // Initialize Flickity if not already initialized
  if (typeof Flickity !== 'undefined') {
    carousels.forEach(carousel => {
      if (!carousel.classList.contains('flickity-enabled')) {
        new Flickity(carousel, JSON.parse(carousel.getAttribute('data-flickity-options')));
      }
    });
  }
}

function loadFlickityAndInitSection(section) {
  if (typeof Flickity === 'undefined') {
    const script = document.createElement('script');
    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';
    script.onload = () => initCollectionTabsSlider(section);
    document.head.appendChild(script);
  } else {
    initCollectionTabsSlider(section);
  }
}

// Normal load
document.addEventListener('DOMContentLoaded', () => {
  document.querySelectorAll('.collection-tabs-section').forEach(section => {
    loadFlickityAndInitSection(section);
  });
});

// Theme editor support
document.addEventListener('shopify:section:load', (event) => {
  const section = event.target.querySelector('.collection-tabs-section');
  loadFlickityAndInitSection(section);
});
{% endjavascript %}
