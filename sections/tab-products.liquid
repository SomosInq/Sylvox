{% comment %} Tab Products Section â€“ With Global Custom Filters {% endcomment %}
{{ 'section-tab-products.css' | asset_url | stylesheet_tag }}

<style>
  .tabs {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    z-index: 20;
    display: flex;
    gap: 10px;
    background: white;
    padding: 10px;
    border-radius: 9999px;
    top: var(--tab-position, 30%);
  }

  .tab-product {
    background: #fff;
    padding: 10px 15px;
    border-radius: 9999px;
    cursor: pointer;
  }

  .tab-product.active {
    background: var(--Dark-Green, #20413B);
    color: white;
  }

  .product-image {
    background: #e5e7eb;
  }

  .collection-title-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 20px 0 10px;
  }

  .collection-title-row h3 {
    border-right: 1px solid #C6C6C6;
    padding-right: 20px;
    margin-right: 20px;
  }

  .filter-btn img {
  width: 20px;
  height: 20px;
  margin-right: 8px;
}

  .product-filter-buttons {
    display: flex;
    gap: 12px;
  }

  .filter-btn {
    padding: 0 0 calc(var(--gutter) / 2) 0;
    {% comment %} background: #f5f5f5; {% endcomment %}
    border: none;
    {% comment %} padding: 8px 12px; {% endcomment %}
    display: flex;
    align-items: center;
    cursor: pointer;
    border-radius: 5px;
    transition: background 0.3s ease;
  }

  .filter-btn.active {
    {% comment %} background: #333; {% endcomment %}
    color: white;
  }

  .tab-product-content__banner {
    position: relative;
    width: 100%;
    height: auto;
    display: block;
  }

  .tab-product-content__banner img {
    display: block;
    width: 100%;
    height: auto;
  }

  .tab-product-content__info {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    padding: 20px;
    display: grid;
    place-items: var(--vertical-align, center) var(--horizontal-align, center);
    text-align: var(--text-align, center);
    pointer-events: none;
  }

  .tab-product-content__info-title {
    Margin: 0;
  }
  
  .tab-product-content__info-title h2 {
    font-size: 56px;
    Margin: 0;
  }

  .tab-product-content__info.place-left {
    --horizontal-align: start;
    --text-align: left;
  }

  .tab-product-content__info.place-center {
    --horizontal-align: center;
    --text-align: center;
  }

  .tab-product-content__info.place-right {
    --horizontal-align: end;
    --text-align: right;
  }

  .tab-product-content__info.align-top {
    --vertical-align: start;
  }

  .tab-product-content__info.align-middle {
    --vertical-align: center;
  }

  .tab-product-content__info.align-bottom {
    --vertical-align: end;
  }

  .tab-products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 20px;
    margin-top: 30px;
  }

  .product-card {
    border: none !important;
    padding: 10px;
    text-align: left;
    background: #fff;
    transition: transform 0.3s ease;
  }

  .product-card:hover {
    transform: scale(1.03);
  }
</style>

<div class="tab-products section section_width_{{ section.settings.section_width }}"
     data-section-id="{{ section.id }}"
     style="--tab-position: {{ section.settings.tabs_position }}%; padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px; margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px">

  <div class="tabs">
    {% for block in section.blocks %}
      <div class="tab-product" data-tab-id="{{ forloop.index0 }}" data-section-id="{{ section.id }}">
        {{ block.settings.tab_label }}
      </div>
    {% endfor %}
  </div>

  {% assign filter_list = section.settings.filters | split: ',' %}

  {% for block in section.blocks %}
    {% assign vertical_position_class = '' %}
    {% if block.settings.vertical_position < 33 %}
      {% assign vertical_position_class = 'align-top' %}
    {% elsif block.settings.vertical_position > 66 %}
      {% assign vertical_position_class = 'align-bottom' %}
    {% else %}
      {% assign vertical_position_class = 'align-middle' %}
    {% endif %}

    <div class="tab-product-content section_content_width_{{ section.settings.section_content_width }}"
         id="tab-product-content-{{ section.id }}-{{ forloop.index0 }}">

      <div class="tab-product-content__banner">
        {% if block.settings.image %}
          <img src="{{ block.settings.image | image_url }}" alt="{{ block.settings.title }}">
        {% endif %}

        <div class="tab-product-content__info place-{{ block.settings.horizontal_position }} {{ vertical_position_class }}"
             style="color: {{ block.settings.text_color }}; font-weight: {{ block.settings.font_weight }};">
          <div>
            {% if block.settings.inline_title != blank %}
              <div class="tab-product-content__info-subtitle">
                <span>{{ block.settings.inline_title }}</span>
              </div>
            {% endif %}
            <div class="tab-product-content__info-title">
  {% case block.settings.heading_tag %}
    {% when 'h1' %}<h1>{{ block.settings.title }}</h1>
    {% when 'h2' %}<h2>{{ block.settings.title }}</h2>
    {% when 'h3' %}<h3>{{ block.settings.title }}</h3>
    {% when 'h4' %}<h4>{{ block.settings.title }}</h4>
    {% when 'p'  %}<p>{{ block.settings.title }}</p>
    {% when 'i'  %}<i>{{ block.settings.title }}</i>
    {% else %}<h2>{{ block.settings.title }}</h2>
  {% endcase %}
</div>
            <div class="tab-product-content__info-dec">
              {{ block.settings.description }}
            </div>
          </div>
        </div>
      </div>

      {% if block.settings.collection %}
        <div class="collection-title-row" style="color: {{ block.settings.collection_title_color }}">
          <div style="display: flex; align-items: center; gap: 20px;">
            <h3>{{ block.settings.collection.title }}</h3>
            <div class="product-filter-buttons">
              <p>Filters:</p>
              {% assign filter_icons = section.settings.filter_icons | split: ',' %}
{% for filter in filter_list %}
  {% assign trimmed = filter | strip %}
  {% assign image_url = '' %}
  {% for pair in filter_icons %}
    {% assign parts = pair | split: ':' %}
    {% if parts[0] == trimmed %}
      {% assign image_url = parts[1] %}
    {% endif %}
  {% endfor %}
  <button class="filter-btn{% if forloop.first %} active{% endif %}" data-filter="{{ trimmed | downcase }}">
    {% if image_url != '' %}
      <img src="{{ image_url | strip }}" alt="{{ trimmed }}" />
    {% endif %}
    {{ trimmed }}
  </button>
{% endfor %}

            </div>
          </div>
          <a href="{{ block.settings.collection.url }}" class="button">See All</a>
        </div>

        <div class="tab-products-grid">
          {% for product in block.settings.collection.products limit: section.settings.products_count %}
            <div class="product-card" data-tags="{{ product.tags | join: ',' | downcase }}">
              <a href="{{ product.url }}">

                <div class="product-image">
                <img src="{{ product.featured_image | image_url }}" alt="{{ product.title }}">
                </div>
                {% if product.metafields.custom.material %}
  <div class="product__filter-label">
    {{ product.metafields.custom.material.value }}
  </div>
{% endif %}
                <h4>{{ product.title }}</h4>
                <p>{{ product.price | money_with_currency }}</p>
              </a>
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>
  {% endfor %}
</div>

<script>
  function initializeTabbedSection(sectionId) {
    const section = document.querySelector(`[data-section-id='${sectionId}']`);
    if (!section) return;
    const tabs = section.querySelectorAll('.tab-product');
    const contents = section.querySelectorAll('.tab-product-content');
    tabs.forEach(tab => {
      tab.addEventListener('click', function () {
        const tabId = tab.getAttribute('data-tab-id');
        tabs.forEach(t => t.classList.remove('active'));
        contents.forEach(c => c.classList.remove('active'));
        tab.classList.add('active');
        section.querySelector(`#tab-product-content-${sectionId}-${tabId}`).classList.add('active');
      });
    });
    if (tabs.length > 0) {
      tabs[0].classList.add('active');
      contents[0].classList.add('active');
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.tab-products').forEach(section => {
      const sectionId = section.getAttribute('data-section-id');
      initializeTabbedSection(sectionId);

      section.querySelectorAll('.product-filter-buttons').forEach(group => {
        const buttons = group.querySelectorAll('.filter-btn');
        const grid = group.closest('.tab-product-content').querySelector('.tab-products-grid');
        const products = grid.querySelectorAll('.product-card');

        buttons.forEach(btn => {
          btn.addEventListener('click', () => {
            const filter = btn.getAttribute('data-filter');
            buttons.forEach(b => b.classList.remove('active'));
            btn.classList.add('active');

            products.forEach(product => {
              const tags = product.getAttribute('data-tags');
              if (filter === 'all' || (tags && tags.includes(filter))) {
                product.style.display = '';
              } else {
                product.style.display = 'none';
              }
            });
          });
        });
      });
    });
  });
</script>

{% schema %}
{
  "name": "Tab Products",
  "settings": [
    { "type": "checkbox", "id": "stack_products", "label": "Stack products", "default": true },
    { "type": "textarea", "id": "filters", "label": "Filters (comma-separated)", "default": "All,Full Sun,Partial Sun", "info": "Product tags used as filters (case-sensitive)." },
    { 
  "type": "textarea", 
  "id": "filter_icons", 
  "label": "Filter icons (Label:URL, comma-separated)", 
  "default": "All:/files/filter-all.png,Full Sun:/files/filter-fullsun.png,Partial Sun:/files/filter-partialsun.png" 
},

    { "type": "select", "id": "section_width", "label": "Section Width", "default": "standard", "options": [ { "value": "standard", "label": "50% Width" }, { "value": "full", "label": "Full Width" } ] },
    { "type": "select", "id": "section_content_width", "label": "Content Width", "default": "standard", "options": [ { "value": "standard", "label": "50% Width" }, { "value": "full", "label": "Full Width" } ] },
    { "type": "range", "id": "products_count", "label": "Products to show", "min": 2, "max": 10, "step": 1, "default": 6 },
    {
      "type": "select", "id": "products_per_row_mobile", "label": "Products per row (mobile)", "default": "2",
      "options": [ { "value": "1", "label": "1" }, { "value": "2", "label": "2" } ]
    },
    {
      "type": "range", "id": "products_per_row_desktop", "label": "Products per row (desktop)", "min": 2, "max": 5, "step": 1, "default": 4
    },
    { "type": "text", "id": "subheading", "label": "Subheading" },
    { "type": "text", "id": "title", "label": "Heading", "default": "Featured collection" },
    { "type": "richtext", "id": "content", "label": "Content" },
    { "type": "url", "id": "link_url", "label": "Link URL", "info": "Defaults to collection URL." },
    { "type": "text", "id": "link_text", "label": "Link text", "default": "View all" },
    { "type": "checkbox", "id": "enable_parallax", "label": "Enable parallax effect", "info": "Parallax crops images.", "default": false },
    {
      "type": "select", "id": "image_size", "label": "Image size", "default": "auto",
      "options": [
        { "value": "auto", "label": "Original image ratio" },
        { "value": "sm", "label": "Small" },
        { "value": "md", "label": "Medium" },
        { "value": "lg", "label": "Large" },
        { "value": "fill", "label": "Fill screen" }
      ]
    },
    { "type": "range", "id": "tabs_position", "label": "Tab label vertical position", "min": 0, "max": 100, "step": 1, "default": 30, "unit": "%" },
    { "type": "range", "id": "padding_top", "label": "Padding top", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_bottom", "label": "Padding bottom", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_left", "label": "Padding left", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_right", "label": "Padding right", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_top", "label": "Margin top", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_bottom", "label": "Margin bottom", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_left", "label": "Margin left", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_right", "label": "Margin right", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        { "type": "text", "id": "tab_label", "label": "Tab Label" },
        { "type": "text", "id": "title", "label": "Heading" },
        { "type": "text", "id": "inline_title", "label": "Inline Title" },
        { "type": "richtext", "id": "description", "label": "Description" },
        { "type": "color", "id": "text_color", "label": "Text Color", "default": "#000000" },
        { "type": "select", "id": "font_weight", "label": "Font Weight", "default": "normal", "options": [ { "value": "normal", "label": "Normal" }, { "value": "bold", "label": "Bold" }, { "value": "lighter", "label": "Light" } ] },
        { "type": "select", "id": "horizontal_position", "label": "Horizontal Content Alignment", "default": "center", "options": [ { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" } ] },
        { "type": "range", "id": "vertical_position", "label": "Vertical Content Position (%)", "min": 0, "max": 100, "step": 1, "default": 50 },
        { "type": "image_picker", "id": "image", "label": "Banner Image" },
        { "type": "collection", "id": "collection", "label": "Collection" },
        { "type": "color", "id": "collection_title_color", "label": "Collection Title Color", "default": "#000000" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Tab Products",
      "category": "Custom Sections"
    }
  ]
}
{% endschema %}
