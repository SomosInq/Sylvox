
{{ 'section-tab-products.css' | asset_url | stylesheet_tag }}

<style>
  .tab-product-content__info {
    display: grid;
    place-items: var(--vertical-align, center) var(--horizontal-align, center);
    text-align: var(--text-align, center);
  }
  .tab-product-content__info.place-left {
    --horizontal-align: start;
    --text-align: left;
  }
  .tab-product-content__info.place-center {
    --horizontal-align: center;
    --text-align: center;
  }
  .tab-product-content__info.place-right {
    --horizontal-align: end;
    --text-align: right;
  }
  .tab-product-content__info.align-top { --vertical-align: start; }
  .tab-product-content__info.align-middle { --vertical-align: center; }
  .tab-product-content__info.align-bottom { --vertical-align: end; }

  .overlay-image {
    position: absolute;
    top: 1rem;
    right: 1rem;
    z-index: 10;
  }

  .product-filter-buttons {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .filter-btn {
    background: white;
    border: 1px solid #ccc;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    cursor: pointer;
  }
</style>

<div class="tab-products section section-full text-custom" data-section-id="{{ section.id }}">
  <div class="tabs" style="--tab-position: {{ section.settings.tabs_position }}%;">
    {% for block in section.blocks %}
      <div class="tab-product {% if forloop.first %}active{% endif %}" data-tab-id="{{ forloop.index0 }}" data-section-id="{{ section.id }}">
        {{ block.settings.tab_label }}
      </div>
    {% endfor %}
  </div>

  {% for block in section.blocks %}
    <div class="tab-product-content {% if forloop.first %}active{% endif %}" id="tab-product-content-{{ section.id }}-{{ forloop.index0 }}">
      <div class="tab-product-content__banner" style="position: relative;">
        <div class="content-over-media {% if section.settings.full_width %}full-bleed{% endif %}">
          {% if block.settings.overlay_image %}
            <div class="overlay-image">
              <img src="{{ block.settings.overlay_image | image_url }}" alt="Overlay">
            </div>
          {% endif %}

          {% if block.settings.image != blank %}
            <img src="{{ block.settings.image | image_url }}" alt="{{ block.settings.title }}" style="width: 100%;">
          {% else %}
            {{ 'lifestyle-1' | placeholder_svg_tag }}
          {% endif %}

          <div class="tab-product-content__info place-{{ block.settings.text_align }} align-{{ block.settings.text_vertical }}"
               style="--tab-text-color: {{ block.settings.text_color }}; --tab-content-max-width: {{ block.settings.content_max_width }}px;">
            <div class="tab-product-content__info-title" style="display: flex; flex-direction: column;">
              <h3 class="{{ block.settings.heading_tag }}">{{ block.settings.title }}</h3>
              {% if block.settings.inline_title != blank %}
                <span class="text-base font-medium">{{ block.settings.inline_title }}</span>
              {% endif %}
            </div>
            <div class="tab-product-content__info-dec">
              {{ block.settings.description }}
            </div>

            <div class="product-filter-buttons">
              <button class="filter-btn" data-filter="all">All</button>
              <button class="filter-btn" data-filter="full-sun">Full Sun</button>
              <button class="filter-btn" data-filter="partial-sun">Partial Sun</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  {% endfor %}
</div>

<script>
  function initializeTabbedSection(sectionId) {
    const section = document.querySelector(`[data-section-id='${sectionId}']`);
    if (!section) return;

    const tabs = section.querySelectorAll('.tab-product');
    const contents = section.querySelectorAll('.tab-product-content');

    tabs.forEach((tab) => {
      tab.addEventListener('click', function () {
        const tabId = tab.getAttribute('data-tab-id');
        tabs.forEach((t) => t.classList.remove('active'));
        contents.forEach((c) => c.classList.remove('active'));
        tab.classList.add('active');
        section.querySelector(`#tab-product-content-${sectionId}-${tabId}`).classList.add('active');
      });
    });

    if (tabs.length > 0) {
      tabs[0].classList.add('active');
      contents[0].classList.add('active');
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.tab-products').forEach((section) => {
      initializeTabbedSection(section.getAttribute('data-section-id'));
    });
  });

  document.addEventListener('shopify:section:load', function (event) {
    const section = event.target.querySelector('.tab-products');
    if (section) {
      const sectionId = section.getAttribute('data-section-id');
      initializeTabbedSection(sectionId);
    }
  });
</script>

{% schema %}
{
  "name": "Tab Products",
  "settings": [
    { "type": "checkbox", "id": "full_width", "label": "Full width", "default": true },
    { "type": "range", "id": "tabs_position", "min": 0, "max": 100, "step": 1, "unit": "%", "label": "Tab vertical position", "default": 30 }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        { "type": "text", "id": "tab_label", "label": "Tab Label" },
        { "type": "text", "id": "title", "label": "Heading" },
        { "type": "select", "id": "heading_tag", "label": "Heading size", "options": [{ "value": "h2", "label": "Large" }, { "value": "h3", "label": "Medium" }], "default": "h2" },
        { "type": "text", "id": "inline_title", "label": "Inline Title" },
        { "type": "richtext", "id": "description", "label": "Description" },
        { "type": "range", "id": "content_max_width", "min": 400, "max": 1200, "step": 20, "unit": "px", "label": "Content Max Width", "default": 780 },
        { "type": "color", "id": "text_color", "label": "Text Color", "default": "#000000" },
        { "type": "image_picker", "id": "image", "label": "Banner Image" },
        { "type": "image_picker", "id": "overlay_image", "label": "Top Right Overlay Image" },
        { "type": "select", "id": "text_align", "label": "Horizontal Text Alignment", "options": [ { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" } ], "default": "center" },
        { "type": "select", "id": "text_vertical", "label": "Vertical Text Alignment", "options": [ { "value": "top", "label": "Top" }, { "value": "middle", "label": "Middle" }, { "value": "bottom", "label": "Bottom" } ], "default": "middle" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Tab Products",
      "category": "Custom"
    }
  ]
}
{% endschema %}
