{{ 'section-tab-products.css' | asset_url | stylesheet_tag }}

<style>
  /* Fix overlapping content and layout */
  .tab-product-content__info {
    display: flex;
    flex-direction: column;
    justify-content: var(--vertical-align, center);
    align-items: var(--horizontal-align, center);
    text-align: var(--text-align, center);
    max-width: var(--tab-content-max-width);
    color: var(--tab-text-color);
    padding: 1rem;
  }

  .tab-product-content__info-title {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .tab-product-content__banner {
    position: relative;
  }

  .overlay-image {
    position: absolute;
    top: 1rem;
    right: 1rem;
    z-index: 2;
  }

  .product-filter-buttons {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .filter-btn {
    background: white;
    border: 1px solid #ccc;
    padding: 0.5rem 1rem;
    font-size: 0.875rem;
    cursor: pointer;
    border-radius: 0.375rem;
  }

  .tab-product-content {
    display: none;
  }

  .tab-product-content.active {
    display: block;
  }
</style>

<div class="tab-products section section-blends section-full text-custom" data-section-id="{{ section.id }}">
  <div class="tabs" style="--tab-position: {{ section.settings.tabs_position }}%;">
    {% for block in section.blocks %}
      <div class="tab-product {% if forloop.first %}active{% endif %}" data-tab-id="{{ forloop.index0 }}" data-section-id="{{ section.id }}">
        {{ block.settings.tab_label }}
      </div>
    {% endfor %}
  </div>

  {% for block in section.blocks %}
    <div class="tab-product-content {% if forloop.first %}active{% endif %}" id="tab-product-content-{{ section.id }}-{{ forloop.index0 }}">
      <div class="tab-product-content__banner">
        {% if block.settings.image != blank %}
          <img src="{{ block.settings.image | image_url: width: 1600 }}" alt="{{ block.settings.title }}" style="width: 100%; height: auto;" />
        {% else %}
          {{ 'lifestyle-1' | placeholder_svg_tag: 'placeholder' | replace: '<svg', '<svg preserveAspectRatio="xMinYMin slice"' }}
        {% endif %}

        {% if block.settings.overlay_image %}
          <div class="overlay-image">
            <img src="{{ block.settings.overlay_image | image_url }}" alt="Overlay">
          </div>
        {% endif %}

        <div class="tab-product-content__info place-{{ block.settings.text_align }} align-{{ block.settings.text_vertical }} {{ section.settings.mobile_text_position }} {{ section.settings.desktop_text_position }}"
             style="--tab-text-color: {{ block.settings.text_color }}; --tab-content-max-width: {{ block.settings.content_max_width }}px;">
          <div class="tab-product-content__info-title">
            <h3 class="{{ block.settings.heading_tag }}">{{ block.settings.title }}</h3>
            {% if block.settings.inline_title != blank %}
              <span class="text-base font-medium">{{ block.settings.inline_title }}</span>
            {% endif %}
          </div>
          <div class="tab-product-content__info-dec">
            {{ block.settings.description }}
          </div>
          <div class="product-filter-buttons">
            <button class="filter-btn" data-filter="all">All</button>
            <button class="filter-btn" data-filter="full-sun">Full Sun</button>
            <button class="filter-btn" data-filter="partial-sun">Partial Sun</button>
          </div>
        </div>
      </div>
    </div>
  {% endfor %}
</div>

<script>
  function initializeTabbedSection(sectionId) {
    const section = document.querySelector(`[data-section-id='${sectionId}']`);
    if (!section) return;

    const tabs = section.querySelectorAll('.tab-product');
    const contents = section.querySelectorAll('.tab-product-content');

    tabs.forEach((tab) => {
      tab.addEventListener('click', function () {
        const tabId = tab.getAttribute('data-tab-id');

        tabs.forEach((t) => t.classList.remove('active'));
        contents.forEach((c) => c.classList.remove('active'));

        tab.classList.add('active');
        section.querySelector(`#tab-product-content-${sectionId}-${tabId}`).classList.add('active');
      });
    });

    if (tabs.length > 0) {
      tabs[0].classList.add('active');
      contents[0].classList.add('active');
    }
  }

  function initializeAllTabbedSections() {
    document.querySelectorAll('.tab-products').forEach((section) => {
      initializeTabbedSection(section.getAttribute('data-section-id'));
    });
  }

  document.addEventListener('DOMContentLoaded', initializeAllTabbedSections);

  document.addEventListener('shopify:section:load', function (event) {
    const section = event.target.querySelector('.tab-products');
    if (section) {
      const sectionId = section.getAttribute('data-section-id');
      initializeTabbedSection(sectionId);
    }
  });
</script>