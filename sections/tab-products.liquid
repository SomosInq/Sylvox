{{ 'section-tab-products.css' | asset_url | stylesheet_tag }}

<style>
  .tabs {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    z-index: 20;
    display: flex;
    gap: 10px;
    background: white;
    padding: 10px;
    border-radius: 9999px;
    top: var(--tab-position, 30%);
  }

  .tabs select {
    display: none;
  }

  .tab-product {
    background: #fff;
    padding: 10px 15px;
    border-radius: 9999px;
    cursor: pointer;
  }

  .tab-product.active {
    background: var(--Dark-Green, #20413B);
    color: white;
  }

  .collection-title-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin: 20px 0 10px;
    flex-wrap: wrap;
  }

  .title-filters {
    display: flex;
    align-items: center;
    gap: 20px;
    flex-wrap: wrap;
  }

  .title-filters h3 {
    margin: 0;
    padding-right: 20px;
    border-right: 1px solid #C6C6C6;
  }

  .product-filter-buttons {
    display: flex;
    gap: 20px;
    align-items: center;
    font-size: 18px;
  }

  .product-filter-buttons p {
    margin: 0;
  }

  .filter-btn {
    border: none;
    cursor: pointer;
    padding: 0;
    border-radius: 4px;
    font-size: 14px;
    background: transparent;
  }

  .filter-btn div span {
    font-size: 16px;
    font-weight: 500;
    color: #C6C6C6;
  }

  .filter-btn.active div span {
    color: #000;
  }

  .product-filter-buttons select {
    display: none;
  }

  .tab-product-content__banner {
    position: relative;
  }

  .tab-product-content__banner img {
    width: 100%;
    display: block;
    height: auto;
  }

  .tab-product-content__info {
    position: absolute;
    top: 0; left: 0;
    width: 100%; height: 100%;
    display: flex;
    pointer-events: auto;
    padding: 40px;
    z-index: 2;
  }

  .justify-left { justify-content: flex-start; text-align: left; }
  .justify-center { justify-content: center; text-align: center; }
  .justify-right { justify-content: flex-end; text-align: right; }

  .align-top { align-items: flex-start; }
  .align-middle { align-items: center; }
  .align-bottom { align-items: flex-end; }

  .tab-product-content__text-box {
    color: inherit;
  }

  .tab-products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 20px;
    margin-top: 30px;
  }

  @media (max-width: 600px) {
        .title-filters {
        width: 100% !important;
    }
    .tabs {
      display: block;
      position: relative;
      transform: none;
      width: 100%;
      left: 0;
      padding: 0 25px !important;
    }
    .tabs select {
      display: block;
      width: 100%;
      padding: 10px;
      font-size: 16px;
      border-radius: 50px;
    }
    .tab-product {
      display: none;
    }

    .product-filter-buttons {
      display: block;
      margin-top: 10px;
    }
    .product-filter-buttons select {
      display: block;
      width: 100%;
      padding: 10px;
      font-size: 16px;
      border-radius: 50px;
    }
    .product-filter-buttons p,
    .product-filter-buttons .filter-btn {
      display: none;
    }

    .tab-product-content__banner img {
      height: var(--mobile-banner-height, auto);
      object-fit: cover;
    }

    .tab-product-content__info {
      padding: 20px !important;
    }

    .collection-title-row {
      flex-direction: column;
      align-items: flex-start;
    }

    .title-filters {
      flex-direction: column;
      align-items: flex-start;
    }

    .title-filters h3 {
      border: none;
      padding: 0;
    }

    a.button {
      width: 100%;
      border-radius: 50px;
      margin-top: 20px;
      text-align: center;
    }
  }
</style>

<div class="tab-products section section_width_{{ section.settings.section_width }}"
     data-section-id="{{ section.id }}"
     style="
       --tab-position: {{ section.settings.tabs_position }}%;
       --mobile-banner-height: {{ section.settings.mobile_banner_height | append: 'px' }};
       padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px;
       margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px">

  <div class="tabs">
    <select class="tabs-dropdown">
      {% for block in section.blocks %}
        <option value="{{ forloop.index0 }}">{{ block.settings.tab_label }}</option>
      {% endfor %}
    </select>

    {% for block in section.blocks %}
      <div class="tab-product" data-tab-id="{{ forloop.index0 }}" data-section-id="{{ section.id }}">
        {{ block.settings.tab_label }}
      </div>
    {% endfor %}
  </div>

  {% for block in section.blocks %}

    {% assign justify_class = '' %}
    {% if block.settings.horizontal_position == 'left' %}
      {% assign justify_class = 'justify-left' %}
    {% elsif block.settings.horizontal_position == 'center' %}
      {% assign justify_class = 'justify-center' %}
    {% elsif block.settings.horizontal_position == 'right' %}
      {% assign justify_class = 'justify-right' %}
    {% endif %}

    {% assign align_class = '' %}
    {% if block.settings.vertical_position < 33 %}
      {% assign align_class = 'align-top' %}
    {% elsif block.settings.vertical_position > 66 %}
      {% assign align_class = 'align-bottom' %}
    {% else %}
      {% assign align_class = 'align-middle' %}
    {% endif %}

    <div class="tab-product-content section_content_width_{{ section.settings.section_content_width }}"
         id="tab-product-content-{{ section.id }}-{{ forloop.index0 }}">

      <div class="tab-product-content__banner">
        {% if block.settings.image %}
          <img src="{{ block.settings.image | image_url }}" alt="{{ block.settings.title }}">
        {% endif %}
        <div class="tab-product-content__info {{ justify_class }} {{ align_class }}"
             style="color: {{ block.settings.text_color }}; font-weight: {{ block.settings.font_weight }};">
          <div class="tab-product-content__text-box">
            {% if block.settings.inline_title %}
              <div><span>{{ block.settings.inline_title }}</span></div>
            {% endif %}
            <h2>{{ block.settings.title }}</h2>
            <div>{{ block.settings.description }}</div>
          </div>
        </div>
      </div>

      {% if block.settings.collection %}
        {%- assign all_resolutions = "All,Full Sun,Partial Sun" | split: "," -%}

        <div class="collection-title-row" style="color: {{ block.settings.collection_title_color }}">
          <div class="title-filters">
            <h3>{{ block.settings.collection.title }}</h3>
            <div class="product-filter-buttons">
              <p>Filters:</p>
              <select class="filters-dropdown">
                {% for res in all_resolutions %}
                  {% assign handle = res | handleize %}
                  <option value="{{ handle }}">{{ res }}</option>
                {% endfor %}
              </select>

              {% for res in all_resolutions %}
                {% assign handle = res | handleize %}
                <button class="filter-btn{% if forloop.first %} active{% endif %}" data-filter="{{ handle }}">
                  <div style="display:flex; align-items:center;">
                    {% if res != "All" %}
                      <img src="{{ 'filter-' | append: handle | append: '.jpg' | asset_url }}" alt="{{ res }}" style="width:30px; height:auto; margin-bottom:4px;" />
                    {% endif %}
                    <span>{{ res }}</span>
                  </div>
                </button>
              {% endfor %}
            </div>
          </div>
          <a href="{{ block.settings.collection.url }}" class="button">See All</a>
        </div>

        <div class="tab-products-grid">
          {% for product in block.settings.collection.products limit: section.settings.products_count %}
            {% assign res = product.metafields.custom.outdoor_tv_resolution.value | strip | handleize %}
            <div class="product-card" data-resolution="{{ res }}">
              <a href="{{ product.url }}">
                <div class="product-card__top">
                  <div class="product-image">
                    <img src="{{ product.featured_image | image_url }}" alt="{{ product.title }}">
                  </div>
                </div>
                <div class="product-meta-info">
                  <h4>{{ product.title }}</h4>
                  <p>{{ product.price | money_with_currency }}</p>
                </div>
              </a>
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>
  {% endfor %}
</div>

<script>
  function initializeTabbedSection(sectionId) {
    const section = document.querySelector(`[data-section-id='${sectionId}']`);
    if (!section) return;
    const tabs = section.querySelectorAll('.tab-product');
    const contents = section.querySelectorAll('.tab-product-content');
    const dropdown = section.querySelector('.tabs-dropdown');

    tabs.forEach(tab => {
      tab.addEventListener('click', function () {
        const tabId = tab.getAttribute('data-tab-id');
        tabs.forEach(t => t.classList.remove('active'));
        contents.forEach(c => c.classList.remove('active'));
        tab.classList.add('active');
        contents[tabId].classList.add('active');
        if (dropdown) dropdown.value = tabId;
      });
    });

    if (dropdown) {
      dropdown.addEventListener('change', function () {
        const tabId = dropdown.value;
        tabs.forEach(t => t.classList.remove('active'));
        contents.forEach(c => c.classList.remove('active'));
        tabs[tabId].classList.add('active');
        contents[tabId].classList.add('active');
      });
    }

    if (tabs.length > 0) {
      tabs[0].classList.add('active');
      contents[0].classList.add('active');
    }

    section.querySelectorAll('.product-filter-buttons').forEach(group => {
      const buttons = group.querySelectorAll('.filter-btn');
      const dropdown = group.querySelector('.filters-dropdown');
      const grid = group.closest('.tab-product-content').querySelector('.tab-products-grid');
      const products = grid.querySelectorAll('.product-card');

      buttons.forEach(btn => {
        btn.addEventListener('click', () => {
          const filter = btn.getAttribute('data-filter');
          buttons.forEach(b => b.classList.remove('active'));
          btn.classList.add('active');
          if (dropdown) dropdown.value = filter;
          products.forEach(product => {
            const resolution = product.getAttribute('data-resolution');
            if (filter === 'all' || resolution.includes(filter)) {
              product.style.display = '';
            } else {
              product.style.display = 'none';
            }
          });
        });
      });

      if (dropdown) {
        dropdown.addEventListener('change', () => {
          const filter = dropdown.value;
          buttons.forEach(b => b.classList.remove('active'));
          buttons.forEach(b => {
            if (b.getAttribute('data-filter') === filter) b.classList.add('active');
          });
          products.forEach(product => {
            const resolution = product.getAttribute('data-resolution');
            if (filter === 'all' || resolution.includes(filter)) {
              product.style.display = '';
            } else {
              product.style.display = 'none';
            }
          });
        });
      }
    });
  }

  document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.tab-products').forEach(section => {
      const sectionId = section.getAttribute('data-section-id');
      initializeTabbedSection(sectionId);
    });
  });
</script>





{% schema %}
{
  "name": "Tab Products",
  "settings": [
    { "type": "checkbox", "id": "stack_products", "label": "Stack products", "default": true },
    { "type": "select", "id": "section_width", "label": "Section Width", "default": "standard", "options": [ { "value": "standard", "label": "50% Width" }, { "value": "full", "label": "Full Width" } ] },
    { "type": "select", "id": "section_content_width", "label": "Content Width", "default": "standard", "options": [ { "value": "standard", "label": "50% Width" }, { "value": "full", "label": "Full Width" } ] },
    { "type": "range", "id": "products_count", "label": "Products to show", "min": 2, "max": 10, "step": 1, "default": 6 },
    {
      "type": "select", "id": "products_per_row_mobile", "label": "Products per row (mobile)", "default": "2",
      "options": [ { "value": "1", "label": "1" }, { "value": "2", "label": "2" } ]
    },
    {
      "type": "range", "id": "products_per_row_desktop", "label": "Products per row (desktop)", "min": 2, "max": 5, "step": 1, "default": 4
    },
    { "type": "text", "id": "subheading", "label": "Subheading" },
    { "type": "text", "id": "title", "label": "Heading", "default": "Featured collection" },
    { "type": "richtext", "id": "content", "label": "Content" },
    { "type": "url", "id": "link_url", "label": "Link URL", "info": "Defaults to collection URL." },
    { "type": "text", "id": "link_text", "label": "Link text", "default": "View all" },
    { "type": "checkbox", "id": "enable_parallax", "label": "Enable parallax effect", "default": false },
    {
      "type": "select", "id": "image_size", "label": "Image size", "default": "auto",
      "options": [
        { "value": "auto", "label": "Original image ratio" },
        { "value": "sm", "label": "Small" },
        { "value": "md", "label": "Medium" },
        { "value": "lg", "label": "Large" },
        { "value": "fill", "label": "Fill screen" }
      ]
    },
    { "type": "range", "id": "tabs_position", "label": "Tab label vertical position", "min": 0, "max": 100, "step": 1, "default": 30, "unit": "%" },
    { "type": "range", "id": "padding_top", "label": "Padding top", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_bottom", "label": "Padding bottom", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_left", "label": "Padding left", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "padding_right", "label": "Padding right", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_top", "label": "Margin top", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_bottom", "label": "Margin bottom", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_left", "label": "Margin left", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" },
    { "type": "range", "id": "margin_right", "label": "Margin right", "min": 0, "max": 100, "step": 5, "default": 0, "unit": "px" }
  ],
  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        { "type": "text", "id": "tab_label", "label": "Tab Label" },
        { "type": "text", "id": "title", "label": "Heading" },
        { "type": "text", "id": "inline_title", "label": "Inline Title" },
        { "type": "richtext", "id": "description", "label": "Description" },
        { "type": "color", "id": "text_color", "label": "Text Color", "default": "#000000" },
        { "type": "select", "id": "font_weight", "label": "Font Weight", "default": "normal", "options": [ { "value": "normal", "label": "Normal" }, { "value": "bold", "label": "Bold" }, { "value": "lighter", "label": "Light" } ] },
        { "type": "select", "id": "horizontal_position", "label": "Horizontal Content Alignment", "default": "center", "options": [ { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" } ] },
        { "type": "range", "id": "vertical_position", "label": "Vertical Content Position (%)", "min": 0, "max": 100, "step": 1, "default": 50 },
        { "type": "image_picker", "id": "image", "label": "Banner Image" },
        { "type": "range", "id": "mobile_banner_height", "label": "Banner Height on Mobile", "min": 100, "max": 800, "step": 10, "default": 300 },
        { "type": "collection", "id": "collection", "label": "Collection" },
        { "type": "color", "id": "collection_title_color", "label": "Collection Title Color", "default": "#000000" }
      ]
    }
  ],
  "presets": [
    {
      "name": "Tab Products",
      "category": "Custom Sections"
    }
  ]
}
{% endschema %}
