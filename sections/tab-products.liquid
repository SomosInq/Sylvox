{% comment %} Tab Products with Enhanced Layout, Original CSS, and Collection Integration {% endcomment %}
<style>
  .section_width_standard,
  .section_width_full {
    transition: all 0.3s ease;
  }
  .section_width_full { width: 100%; }
  .section_width_standard { margin: 0 auto !important; width: 90% !important; }

  .section_content_width_standard,
  .section_content_width_full {
    transition: all 0.3s ease;
  }
  .section_content_width_full { width: 100%; }
  .section_content_width_standard { margin: 0 auto !important; width: 90% !important; }

  .hidden-desktop { display: none !important; }
  .hidden-tablet { display: none !important; }
  .hidden-mobile { display: none !important; }

  @media (max-width: 1024px) {
    .hidden-desktop { display: none !important; }
    .show-tablet { display: block !important; }
  }
  @media (max-width: 768px) {
    .hidden-mobile { display: none !important; }
    .show-mobile { display: block !important; }
  }

  .tab-product-content__info {
    display: grid;
    place-items: var(--vertical-align, center) var(--horizontal-align, center);
    text-align: var(--text-align, center);
  }
  .tab-product-content__info.place-left {
    --horizontal-align: start;
    --text-align: left;
  }
  .tab-product-content__info.place-center {
    --horizontal-align: center;
    --text-align: center;
  }
  .tab-product-content__info.place-right {
    --horizontal-align: end;
    --text-align: right;
  }
  .tab-product-content__info.align-top { --vertical-align: start; }
  .tab-product-content__info.align-middle { --vertical-align: center; }
  .tab-product-content__info.align-bottom { --vertical-align: end; }

  .overlay-image {
    position: absolute;
    top: 1rem;
    right: 1rem;
    z-index: 10;
  }
  .tabs {
    position: absolute;
    top: 20px;
    left: 20px;
    z-index: 20;
    display: flex;
    gap: 10px;
  }
  .tab-product {
    background: rgba(255,255,255,0.8);
    padding: 10px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-weight: bold;
  }
  .tab-product.active {
    background: #000;
    color: #fff;
  }
  .tab-products-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
    gap: 20px;
    margin-top: 30px;
  }
  .product-card {
    border: 1px solid #ddd;
    padding: 10px;
    text-align: center;
    background: #fff;
    transition: transform 0.3s ease;
  }
  .product-card:hover {
    transform: scale(1.03);
  }
</style>

<div id="shopify-section-{{ section.id }}"
     class="tab-products section section-blends section-full text-custom section_width_{{ section.settings.section_width }} section_content_width_{{ section.settings.section_content_width }}
     {% if section.settings.hide_desktop %}hidden-desktop{% endif %}
     {% if section.settings.hide_tablet %}hidden-tablet{% endif %}
     {% if section.settings.hide_mobile %}hidden-mobile{% endif %}
     {{ section.settings.custom_class }}"
     style="
     {% if section.settings.background_type == 'image' and section.settings.background_image != blank %}
       background-image: url({{ section.settings.background_image | image_url }});
       background-size: cover;
       background-repeat: no-repeat;
     {% else %}
       background-color: {{ section.settings.background_color }};
     {% endif %}
     padding-top: {{ section.settings.padding_top }}px;
     padding-bottom: {{ section.settings.padding_bottom }}px;
     padding-left: {{ section.settings.padding_left }}px;
     padding-right: {{ section.settings.padding_right }}px;
     min-height: {{ section.settings.height_desktop }}px;
     "
     data-section-id="{{ section.id }}"
     id="{{ section.settings.custom_id }}">

  {% if section.settings.show_header %}
    <div class="section-header">
      <{{ section.settings.header_tag }} style="color: {{ section.settings.header_color }}; text-align: {{ section.settings.header_align }}; font-weight: {{ section.settings.header_weight }};">
        {{ section.settings.header_text }}
      </{{ section.settings.header_tag }}>
      <div class="rich-text">{{ section.settings.header_richtext }}</div>
    </div>
  {% endif %}

  <div class="tab-banner-wrapper" style="position: relative;">
    {% if section.settings.banner_image != blank %}
      <img src="{{ section.settings.banner_image | image_url }}" alt="Banner" style="width: 100%; height: auto;">
    {% endif %}
    <div class="tabs">
      {% for block in section.blocks %}
        <div class="tab-product" data-tab-id="{{ forloop.index0 }}" data-section-id="{{ section.id }}">
          {{ block.settings.tab_label }}
        </div>
      {% endfor %}
    </div>
  </div>

  {% for block in section.blocks %}
    <div class="tab-product-content" id="tab-product-content-{{ section.id }}-{{ forloop.index0 }}">
      <div class="tab-products-grid">
        {% if block.settings.collection != blank %}
          {% for product in block.settings.collection.products limit: section.settings.products_count %}
            <div class="product-card">
              <a href="{{ product.url }}">
                <img src="{{ product.featured_image | image_url }}" alt="{{ product.title }}" style="width: 100%; height: auto;">
                <h4>{{ product.title }}</h4>
                <p>{{ product.price | money_with_currency }}</p>
              </a>
            </div>
          {% endfor %}
        {% else %}
          <p>No collection selected.</p>
        {% endif %}
      </div>
    </div>
  {% endfor %}
</div>

<script>
  function initializeTabbedSection(sectionId) {
    const section = document.querySelector(`[data-section-id='${sectionId}']`);
    if (!section) return;
    const tabs = section.querySelectorAll('.tab-product');
    const contents = section.querySelectorAll('.tab-product-content');
    tabs.forEach(tab => {
      tab.addEventListener('click', function () {
        const tabId = tab.getAttribute('data-tab-id');
        tabs.forEach(t => t.classList.remove('active'));
        contents.forEach(c => c.classList.remove('active'));
        tab.classList.add('active');
        section.querySelector(`#tab-product-content-${sectionId}-${tabId}`).classList.add('active');
      });
    });
    if (tabs.length > 0) {
      tabs[0].classList.add('active');
      contents[0].classList.add('active');
    }
  }
  function initializeAllTabbedSections() {
    document.querySelectorAll('.tab-products').forEach(section => {
      initializeTabbedSection(section.getAttribute('data-section-id'));
    });
  }
  document.addEventListener('DOMContentLoaded', initializeAllTabbedSections);
  document.addEventListener('shopify:section:load', function (event) {
    const section = event.target.querySelector('.tab-products');
    if (section) {
      const sectionId = section.getAttribute('data-section-id');
      initializeTabbedSection(sectionId);
    }
  });
</script>
<!-- Assume previous code is intact above this line -->

{% schema %}
{
  "name": "Tab Products",
  "settings": [
    { "type": "image_picker", "id": "banner_image", "label": "Banner Image" },
    { "type": "range", "id": "products_count", "label": "Products per tab", "min": 2, "max": 20, "step": 1, "default": 6 },

    { "type": "select", "id": "section_width", "label": "Section Width", "default": "standard", "options": [ { "value": "standard", "label": "50% Width" }, { "value": "full", "label": "Full Width" } ] },
    { "type": "select", "id": "section_content_width", "label": "Content Width", "default": "standard", "options": [ { "value": "standard", "label": "50% Width" }, { "value": "full", "label": "Full Width" } ] },

    { "type": "select", "id": "background_type", "label": "Background Type", "default": "color", "options": [ { "value": "color", "label": "Color" }, { "value": "image", "label": "Image" } ] },
    { "type": "color", "id": "background_color", "label": "Background Color", "default": "#ffffff" },
    { "type": "image_picker", "id": "background_image", "label": "Background Image" },

    { "type": "checkbox", "id": "hide_desktop", "label": "Hide on Desktop", "default": false },
    { "type": "checkbox", "id": "hide_tablet", "label": "Hide on Tablet", "default": false },
    { "type": "checkbox", "id": "hide_mobile", "label": "Hide on Mobile", "default": false },

    { "type": "range", "id": "padding_top", "label": "Padding Top", "min": 0, "max": 200, "step": 5, "default": 0 },
    { "type": "range", "id": "padding_bottom", "label": "Padding Bottom", "min": 0, "max": 200, "step": 5, "default": 0 },
    { "type": "range", "id": "padding_left", "label": "Padding Left", "min": 0, "max": 200, "step": 5, "default": 0 },
    { "type": "range", "id": "padding_right", "label": "Padding Right", "min": 0, "max": 200, "step": 5, "default": 0 },

    { "type": "range", "id": "height_desktop", "label": "Height (Desktop)", "min": 0, "max": 1500, "step": 20, "default": 600 },

    { "type": "checkbox", "id": "show_header", "label": "Show Header", "default": true },
    { "type": "text", "id": "header_text", "label": "Header Text", "default": "Welcome Title" },
    { "type": "select", "id": "header_tag", "label": "Heading Tag", "default": "h2", "options": [ { "value": "h1", "label": "H1" }, { "value": "h2", "label": "H2" }, { "value": "h3", "label": "H3" }, { "value": "h4", "label": "H4" }, { "value": "h5", "label": "H5" }, { "value": "h6", "label": "H6" }, { "value": "p", "label": "Body Text" }, { "value": "i", "label": "Italic" } ] },
    { "type": "color", "id": "header_color", "label": "Header Color", "default": "#000000" },
    { "type": "select", "id": "header_weight", "label": "Header Weight", "default": "bold", "options": [ { "value": "normal", "label": "Normal" }, { "value": "bold", "label": "Bold" }, { "value": "lighter", "label": "Lighter" } ] },
    { "type": "select", "id": "header_align", "label": "Header Alignment", "default": "center", "options": [ { "value": "left", "label": "Left" }, { "value": "center", "label": "Center" }, { "value": "right", "label": "Right" } ] },
    { "type": "richtext", "id": "header_richtext", "label": "Header Rich Text" },

    { "type": "text", "id": "custom_class", "label": "Custom CSS Class" },
    { "type": "text", "id": "custom_id", "label": "Custom ID" },
    { "type": "textarea", "id": "json_blocks", "label": "Custom JSON Blocks", "info": "Use this to define dynamic structures like card data." }
  ],

  "blocks": [
    {
      "type": "tab",
      "name": "Tab",
      "settings": [
        { "type": "text", "id": "tab_label", "label": "Tab Label" },
        { "type": "collection", "id": "collection", "label": "Collection" },
        { "type": "text", "id": "title", "label": "Heading" },
        { "type": "select", "id": "heading_tag", "label": "Heading size", "options": [
          { "value": "h2", "label": "H2" },
          { "value": "h3", "label": "H3" },
          { "value": "h4", "label": "H4" }
        ], "default": "h2" },
        { "type": "text", "id": "inline_title", "label": "Inline title", "default": "Series" },
        { "type": "richtext", "id": "description", "label": "Description" },
        { "type": "range", "id": "content_max_width", "label": "Content max width", "min": 400, "max": 1200, "step": 20, "unit": "px", "default": 780 },
        { "type": "color", "id": "text_color", "label": "Text color", "default": "#000000" },
        { "type": "image_picker", "id": "image", "label": "Banner Image" },
        { "type": "color", "id": "featured_text_color", "label": "Featured text color" },
        { "type": "color", "id": "background", "label": "Button Background" },
        { "type": "color", "id": "btn_text_color", "label": "Button text color" }
      ]
    }
  ], "default": "h2" },
        { "type": "text", "id": "inline_title", "label": "Inline title", "default": "Series" },
        { "type": "richtext", "id": "description", "label": "Description" },
        { "type": "range", "id": "content_max_width", "label": "Content max width", "min": 400, "max": 1200, "step": 20, "unit": "px", "default": 780 },
        { "type": "color", "id": "text_color", "label": "Text color", "default": "#000000" },
        { "type": "image_picker", "id": "image", "label": "Banner Image" },
        { "type": "color", "id": "featured_text_color", "label": "Featured text color" },
        { "type": "color", "id": "background", "label": "Button Background" },
        { "type": "color", "id": "btn_text_color", "label": "Button text color" }
      ]
    }
  ],

  "presets": [
    {
      "name": "Tab Products",
      "category": "Somos Custom"
    }
  ]
}
{% endschema %}
