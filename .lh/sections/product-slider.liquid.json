{
    "sourceFile": "sections/product-slider.liquid",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 32,
            "patches": [
                {
                    "date": 1748433449655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1748433543540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -248,52 +248,63 @@\n   </div>\n </section>\n \n {% javascript %}\n-  function initializeTabs() {\n-    const buttons = document.querySelectorAll('.tab-buttons button');\n-    const carousels = document.querySelectorAll('.product-carousel');\n+function initCollectionTabsSlider(sectionEl) {\n+  const buttons = sectionEl.querySelectorAll('.tab-buttons button');\n+  const carousels = sectionEl.querySelectorAll('.product-carousel');\n \n-    buttons.forEach(button => {\n-      button.addEventListener('click', function () {\n-        const tab = this.dataset.tab;\n+  buttons.forEach(button => {\n+    button.addEventListener('click', function () {\n+      const tab = this.dataset.tab;\n \n-        buttons.forEach(btn => btn.classList.remove('active'));\n-        this.classList.add('active');\n+      buttons.forEach(btn => btn.classList.remove('active'));\n+      this.classList.add('active');\n \n-        carousels.forEach(carousel => {\n-          if (carousel.dataset.tab === tab) {\n-            carousel.classList.add('active');\n-          } else {\n-            carousel.classList.remove('active');\n-          }\n-        });\n+      carousels.forEach(carousel => {\n+        if (carousel.dataset.tab === tab) {\n+          carousel.classList.add('active');\n+        } else {\n+          carousel.classList.remove('active');\n+        }\n       });\n     });\n-  }\n+  });\n \n-  function initializeFlickity() {\n-    const flickityElems = document.querySelectorAll('.js-flickity');\n-    flickityElems.forEach(el => {\n-      if (!el.classList.contains('flickity-enabled')) {\n-        new Flickity(el, JSON.parse(el.getAttribute('data-flickity-options')));\n-      }\n-    });\n+  const flickityElems = sectionEl.querySelectorAll('.js-flickity');\n+  flickityElems.forEach(el => {\n+    if (!el.classList.contains('flickity-enabled')) {\n+      new Flickity(el, JSON.parse(el.getAttribute('data-flickity-options')));\n+    }\n+  });\n+}\n+\n+function loadFlickityAndInitAllSections() {\n+  const sectionEls = document.querySelectorAll('.collection-tabs-section');\n+  sectionEls.forEach(initCollectionTabsSlider);\n+}\n+\n+function loadFlickityLibrary(callback) {\n+  if (typeof Flickity === 'undefined') {\n+    const script = document.createElement('script');\n+    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n+    script.onload = callback;\n+    document.head.appendChild(script);\n+  } else {\n+    callback();\n   }\n+}\n \n-  function loadFlickityAndInit() {\n-    if (typeof Flickity === 'undefined') {\n-      const flickityScript = document.createElement('script');\n-      flickityScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n-      flickityScript.onload = () => {\n-        initializeFlickity();\n-        initializeTabs();\n-      };\n-      document.head.appendChild(flickityScript);\n-    } else {\n-      initializeFlickity();\n-      initializeTabs();\n-    }\n+// Initial run\n+document.addEventListener('DOMContentLoaded', function () {\n+  loadFlickityLibrary(loadFlickityAndInitAllSections);\n+});\n+\n+// Re-init after section is loaded in Theme Customizer\n+document.addEventListener('shopify:section:load', function (e) {\n+  const sectionEl = e.target.querySelector('.collection-tabs-section');\n+  if (sectionEl) {\n+    loadFlickityLibrary(() => initCollectionTabsSlider(sectionEl));\n   }\n+});\n+{% endjavascript %}\n \n-  document.addEventListener('DOMContentLoaded', loadFlickityAndInit);\n-{% endjavascript %}\n"
                },
                {
                    "date": 1748433688321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -248,63 +248,64 @@\n   </div>\n </section>\n \n {% javascript %}\n-function initCollectionTabsSlider(sectionEl) {\n-  const buttons = sectionEl.querySelectorAll('.tab-buttons button');\n-  const carousels = sectionEl.querySelectorAll('.product-carousel');\n+function initCollectionTabsSlider(section) {\n+  if (!section) return;\n \n+  const buttons = section.querySelectorAll('.tab-buttons button');\n+  const carousels = section.querySelectorAll('.product-carousel');\n+\n+  // Attach tab click events\n   buttons.forEach(button => {\n-    button.addEventListener('click', function () {\n-      const tab = this.dataset.tab;\n+    button.addEventListener('click', () => {\n+      const targetTab = button.dataset.tab;\n \n       buttons.forEach(btn => btn.classList.remove('active'));\n-      this.classList.add('active');\n+      button.classList.add('active');\n \n       carousels.forEach(carousel => {\n-        if (carousel.dataset.tab === tab) {\n+        if (carousel.dataset.tab === targetTab) {\n           carousel.classList.add('active');\n         } else {\n           carousel.classList.remove('active');\n         }\n       });\n     });\n   });\n \n-  const flickityElems = sectionEl.querySelectorAll('.js-flickity');\n-  flickityElems.forEach(el => {\n-    if (!el.classList.contains('flickity-enabled')) {\n-      new Flickity(el, JSON.parse(el.getAttribute('data-flickity-options')));\n-    }\n-  });\n+  // Init Flickity if available\n+  if (typeof Flickity !== 'undefined') {\n+    carousels.forEach(carousel => {\n+      if (!carousel.classList.contains('flickity-enabled')) {\n+        new Flickity(carousel, JSON.parse(carousel.getAttribute('data-flickity-options')));\n+      }\n+    });\n+  }\n }\n \n-function loadFlickityAndInitAllSections() {\n-  const sectionEls = document.querySelectorAll('.collection-tabs-section');\n-  sectionEls.forEach(initCollectionTabsSlider);\n-}\n-\n-function loadFlickityLibrary(callback) {\n+function loadFlickityAndInitSection(section) {\n   if (typeof Flickity === 'undefined') {\n     const script = document.createElement('script');\n     script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n-    script.onload = callback;\n+    script.onload = () => initCollectionTabsSlider(section);\n     document.head.appendChild(script);\n   } else {\n-    callback();\n+    initCollectionTabsSlider(section);\n   }\n }\n \n-// Initial run\n-document.addEventListener('DOMContentLoaded', function () {\n-  loadFlickityLibrary(loadFlickityAndInitAllSections);\n+// Initial load\n+document.addEventListener('DOMContentLoaded', () => {\n+  document.querySelectorAll('.collection-tabs-section').forEach(section => {\n+    loadFlickityAndInitSection(section);\n+  });\n });\n \n-// Re-init after section is loaded in Theme Customizer\n-document.addEventListener('shopify:section:load', function (e) {\n-  const sectionEl = e.target.querySelector('.collection-tabs-section');\n-  if (sectionEl) {\n-    loadFlickityLibrary(() => initCollectionTabsSlider(sectionEl));\n-  }\n+// Theme Editor: Reinit on section load\n+document.addEventListener('shopify:section:load', (event) => {\n+  const section = event.target.querySelector('.collection-tabs-section');\n+  loadFlickityAndInitSection(section);\n });\n {% endjavascript %}\n \n+\n"
                },
                {
                    "date": 1748433831881,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -222,9 +222,9 @@\n       {% endfor %}\n     </div>\n \n     {% for block in section.blocks %}\n-      {% assign collection = collections[block.settings.collection] %}\n+      {% assign block_collection = collections[block.settings.collection] %}\n       <div\n         class=\"product-carousel js-flickity {% if forloop.first %}active{% endif %}\"\n         data-tab=\"tab-{{ forloop.index }}\"\n         data-flickity-options='{\n@@ -233,30 +233,35 @@\n           \"pageDots\": false,\n           \"prevNextButtons\": {{ section.settings.show_arrows }}\n         }'\n       >\n-        {% for product in collection.products limit: 10 %}\n-          <div class=\"product-card\">\n-            <a href=\"{{ product.url }}\">\n-              <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n-              <h4>{{ product.title }}</h4>\n-              <p>From {{ product.price | money }}</p>\n-            </a>\n-          </div>\n-        {% endfor %}\n+        {% if block_collection != blank %}\n+          {% for product in block_collection.products limit: 10 %}\n+            <div class=\"product-card\">\n+              <a href=\"{{ product.url }}\">\n+                <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n+                <h4>{{ product.title }}</h4>\n+                <p>From {{ product.price | money }}</p>\n+              </a>\n+            </div>\n+          {% endfor %}\n+        {% else %}\n+          <p>No products found in this collection.</p>\n+        {% endif %}\n       </div>\n     {% endfor %}\n   </div>\n </section>\n \n+\n {% javascript %}\n function initCollectionTabsSlider(section) {\n   if (!section) return;\n \n   const buttons = section.querySelectorAll('.tab-buttons button');\n   const carousels = section.querySelectorAll('.product-carousel');\n \n-  // Attach tab click events\n+  // Attach tab switching\n   buttons.forEach(button => {\n     button.addEventListener('click', () => {\n       const targetTab = button.dataset.tab;\n \n@@ -272,9 +277,9 @@\n       });\n     });\n   });\n \n-  // Init Flickity if available\n+  // Initialize Flickity if not already initialized\n   if (typeof Flickity !== 'undefined') {\n     carousels.forEach(carousel => {\n       if (!carousel.classList.contains('flickity-enabled')) {\n         new Flickity(carousel, JSON.parse(carousel.getAttribute('data-flickity-options')));\n@@ -293,19 +298,17 @@\n     initCollectionTabsSlider(section);\n   }\n }\n \n-// Initial load\n+// Normal load\n document.addEventListener('DOMContentLoaded', () => {\n   document.querySelectorAll('.collection-tabs-section').forEach(section => {\n     loadFlickityAndInitSection(section);\n   });\n });\n \n-// Theme Editor: Reinit on section load\n+// Theme editor support\n document.addEventListener('shopify:section:load', (event) => {\n   const section = event.target.querySelector('.collection-tabs-section');\n   loadFlickityAndInitSection(section);\n });\n {% endjavascript %}\n-\n-\n"
                },
                {
                    "date": 1748444390188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,8 +2,24 @@\n {\n   \"name\": \"Collection Tabs Slider\",\n   \"settings\": [\n     {\n+  \"type\": \"select\",\n+  \"id\": \"section_width\",\n+  \"label\": \"Section Width\",\n+  \"default\": \"standard\",\n+  \"options\": [\n+    {\n+      \"value\": \"standard\",\n+      \"label\": \"50% Width\"\n+    },\n+    {\n+      \"value\": \"full\",\n+      \"label\": \"Full Width\"\n+    }\n+  ]\n+},\n+    {\n       \"type\": \"image_picker\",\n       \"id\": \"left_image\",\n       \"label\": \"Left Side Image\"\n     },\n@@ -28,24 +44,8 @@\n       \"type\": \"checkbox\",\n       \"id\": \"show_arrows\",\n       \"label\": \"Show slider arrows\",\n       \"default\": true\n-    },\n-    {\n-      \"type\": \"select\",\n-      \"id\": \"section_width\",\n-      \"label\": \"Section Width\",\n-      \"default\": \"standard\",\n-      \"options\": [\n-        {\n-          \"value\": \"standard\",\n-          \"label\": \"50% Width\"\n-        },\n-        {\n-          \"value\": \"full\",\n-          \"label\": \"Full Width\"\n-        }\n-      ]\n     }\n   ],\n   \"blocks\": [\n     {\n@@ -75,8 +75,20 @@\n }\n {% endschema %}\n \n {% stylesheet %}\n+.section_width_standard,\n+.section_width_full {\n+transition: all 0.3s ease;\n+}\n+.section_width_full {\n+width: 100%;\n+}\n+\n+.section_width_standard {\n+margin: 0 auto;\n+width: 90%;\n+}\n .collection-tabs-section {\n   display: grid;\n   grid-template-columns: 1fr 2fr;\n   gap: 2rem;\n@@ -191,9 +203,9 @@\n   margin: 0;\n }\n {% endstylesheet %}\n \n-<section class=\"collection-tabs-section {{ section.settings.section_width }}\">\n+<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n   <div class=\"left-image\">\n     {% if section.settings.left_image != blank %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n"
                },
                {
                    "date": 1748509663913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n {% schema %}\n {\n-  \"name\": \"Collection Tabs Slider\",\n+  \"name\": \"Product Slider\",\n   \"settings\": [\n     {\n   \"type\": \"select\",\n   \"id\": \"section_width\",\n@@ -67,9 +67,9 @@\n     }\n   ],\n   \"presets\": [\n     {\n-      \"name\": \"Collection Tabs Slider\",\n+      \"name\": \"Product Slider\",\n       \"category\": \"Somos Custom\"\n     }\n   ]\n }\n"
                },
                {
                    "date": 1748509705679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,17 @@\n       \"type\": \"checkbox\",\n       \"id\": \"show_arrows\",\n       \"label\": \"Show slider arrows\",\n       \"default\": true\n-    }\n+    },\n+    {\"type\": \"range\", \"id\": \"padding_top\", \"label\": \"Padding top\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n+    {\"type\": \"range\", \"id\": \"padding_bottom\", \"label\": \"Padding bottom\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n+    {\"type\": \"range\", \"id\": \"padding_left\", \"label\": \"Padding left\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n+    {\"type\": \"range\", \"id\": \"padding_right\", \"label\": \"Padding right\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n+    {\"type\": \"range\", \"id\": \"margin_top\", \"label\": \"Margin top\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n+    {\"type\": \"range\", \"id\": \"margin_bottom\", \"label\": \"Margin bottom\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n+    {\"type\": \"range\", \"id\": \"margin_left\", \"label\": \"Margin left\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n+    {\"type\": \"range\", \"id\": \"margin_right\", \"label\": \"Margin right\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"}\n   ],\n   \"blocks\": [\n     {\n       \"type\": \"tab\",\n@@ -203,9 +211,9 @@\n   margin: 0;\n }\n {% endstylesheet %}\n \n-<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n+<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }} padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px; margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px\">\n   <div class=\"left-image\">\n     {% if section.settings.left_image != blank %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n"
                },
                {
                    "date": 1748526654713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,20 +83,8 @@\n }\n {% endschema %}\n \n {% stylesheet %}\n-.section_width_standard,\n-.section_width_full {\n-transition: all 0.3s ease;\n-}\n-.section_width_full {\n-width: 100%;\n-}\n-\n-.section_width_standard {\n-margin: 0 auto;\n-width: 90%;\n-}\n .collection-tabs-section {\n   display: grid;\n   grid-template-columns: 1fr 2fr;\n   gap: 2rem;\n"
                },
                {
                    "date": 1748526737958,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,125 +82,8 @@\n   ]\n }\n {% endschema %}\n \n-{% stylesheet %}\n-.collection-tabs-section {\n-  display: grid;\n-  grid-template-columns: 1fr 2fr;\n-  gap: 2rem;\n-  padding: 2rem 0;\n-  margin: 0 auto;\n-}\n-\n-.collection-tabs-section.standard {\n-  max-width: 1200px;\n-}\n-\n-.collection-tabs-section.full {\n-  max-width: 100%;\n-}\n-\n-.left-image img {\n-  width: 100%;\n-  max-width: 500px;\n-  border-radius: 8px;\n-}\n-\n-.right-content {\n-  display: flex;\n-  flex-direction: column;\n-}\n-\n-.tab-header {\n-  display: flex;\n-  justify-content: space-between;\n-  align-items: center;\n-}\n-\n-.tab-title-group {\n-  display: flex;\n-  align-items: center;\n-  gap: 1rem;\n-}\n-\n-.tab-header h3 {\n-  margin: 0;\n-  font-size: 0.95rem;\n-  color: #666;\n-}\n-\n-.tab-header h2 {\n-  margin: 0;\n-  font-size: 2rem;\n-}\n-\n-.shop-all-btn {\n-  text-decoration: none;\n-  padding: 0.4rem 0.9rem;\n-  background-color: #000;\n-  color: #fff;\n-  border-radius: 4px;\n-  font-size: 0.85rem;\n-}\n-\n-.tab-buttons {\n-  display: flex;\n-  gap: 2rem;\n-  margin: 1rem 0 1.5rem;\n-  border-bottom: 2px solid #e5e5e5;\n-}\n-\n-.tab-buttons button {\n-  padding: 0.5rem 0;\n-  background: none;\n-  border: none;\n-  border-bottom: 2px solid transparent;\n-  font-size: 1rem;\n-  font-weight: 600;\n-  cursor: pointer;\n-  color: #333;\n-}\n-\n-.tab-buttons button.active {\n-  border-bottom: 2px solid #000;\n-  color: #000;\n-}\n-\n-.product-carousel {\n-  display: none;\n-}\n-\n-.product-carousel.active {\n-  display: block;\n-}\n-\n-.flickity-viewport {\n-  overflow: hidden;\n-}\n-\n-.flickity-slider > .product-card {\n-  width: 220px;\n-  margin-right: 20px;\n-}\n-\n-.product-card img {\n-  width: 100%;\n-  border-radius: 8px;\n-}\n-\n-.product-card h4 {\n-  font-size: 0.9rem;\n-  margin: 0.5rem 0 0.3rem;\n-}\n-\n-.product-card p {\n-  font-size: 0.85rem;\n-  color: #666;\n-  margin: 0;\n-}\n-{% endstylesheet %}\n-\n <section class=\"collection-tabs-section section_width_{{ section.settings.section_width }} padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px; margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px\">\n   <div class=\"left-image\">\n     {% if section.settings.left_image != blank %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n"
                },
                {
                    "date": 1748593352453,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,24 +2,18 @@\n {\n   \"name\": \"Product Slider\",\n   \"settings\": [\n     {\n-  \"type\": \"select\",\n-  \"id\": \"section_width\",\n-  \"label\": \"Section Width\",\n-  \"default\": \"standard\",\n-  \"options\": [\n-    {\n-      \"value\": \"standard\",\n-      \"label\": \"50% Width\"\n+      \"type\": \"select\",\n+      \"id\": \"section_width\",\n+      \"label\": \"Section Width\",\n+      \"default\": \"standard\",\n+      \"options\": [\n+        { \"value\": \"standard\", \"label\": \"50% Width\" },\n+        { \"value\": \"full\", \"label\": \"Full Width\" }\n+      ]\n     },\n     {\n-      \"value\": \"full\",\n-      \"label\": \"Full Width\"\n-    }\n-  ]\n-},\n-    {\n       \"type\": \"image_picker\",\n       \"id\": \"left_image\",\n       \"label\": \"Left Side Image\"\n     },\n@@ -45,16 +39,16 @@\n       \"id\": \"show_arrows\",\n       \"label\": \"Show slider arrows\",\n       \"default\": true\n     },\n-    {\"type\": \"range\", \"id\": \"padding_top\", \"label\": \"Padding top\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n-    {\"type\": \"range\", \"id\": \"padding_bottom\", \"label\": \"Padding bottom\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n-    {\"type\": \"range\", \"id\": \"padding_left\", \"label\": \"Padding left\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n-    {\"type\": \"range\", \"id\": \"padding_right\", \"label\": \"Padding right\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n-    {\"type\": \"range\", \"id\": \"margin_top\", \"label\": \"Margin top\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n-    {\"type\": \"range\", \"id\": \"margin_bottom\", \"label\": \"Margin bottom\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n-    {\"type\": \"range\", \"id\": \"margin_left\", \"label\": \"Margin left\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"},\n-    {\"type\": \"range\", \"id\": \"margin_right\", \"label\": \"Margin right\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\"}\n+    { \"type\": \"range\", \"id\": \"padding_top\", \"label\": \"Padding top\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"padding_bottom\", \"label\": \"Padding bottom\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"padding_left\", \"label\": \"Padding left\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"padding_right\", \"label\": \"Padding right\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"margin_top\", \"label\": \"Margin top\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"margin_bottom\", \"label\": \"Margin bottom\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"margin_left\", \"label\": \"Margin left\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"margin_right\", \"label\": \"Margin right\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" }\n   ],\n   \"blocks\": [\n     {\n       \"type\": \"tab\",\n@@ -82,9 +76,135 @@\n   ]\n }\n {% endschema %}\n \n-<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }} padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px; margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px\">\n+<style>\n+  .collection-tabs-section {\n+    display: grid;\n+    grid-template-columns: 1fr 2fr;\n+    gap: 2rem;\n+    padding: 2rem 0;\n+    margin: 0 auto;\n+    padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px;\n+    margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px;\n+  }\n+\n+  .collection-tabs-section.standard {\n+    max-width: 1200px;\n+  }\n+\n+  .collection-tabs-section.full {\n+    max-width: 100%;\n+  }\n+\n+  .collection-tabs-section .left-image img {\n+    width: 100%;\n+    max-width: 500px;\n+    border-radius: 8px;\n+  }\n+\n+  .collection-tabs-section .right-content {\n+    display: flex;\n+    flex-direction: column;\n+  }\n+\n+  .collection-tabs-section .tab-header {\n+    display: flex;\n+    justify-content: space-between;\n+    align-items: center;\n+  }\n+\n+  .collection-tabs-section .tab-title-group {\n+    display: flex;\n+    justify-content: space-between;\n+    align-items: center;\n+    gap: 1rem;\n+    width: 100%;\n+  }\n+\n+  .collection-tabs-section .tab-titles {\n+    flex-grow: 1;\n+  }\n+\n+  .collection-tabs-section .tab-header h3 {\n+    margin: 0;\n+    font-size: 0.95rem;\n+    color: #666;\n+  }\n+\n+  .collection-tabs-section .tab-header h2 {\n+    margin: 0;\n+    font-size: 2rem;\n+  }\n+\n+  .collection-tabs-section .shop-all-btn {\n+    text-decoration: none;\n+    padding: 0.4rem 0.9rem;\n+    background-color: #000;\n+    color: #fff;\n+    border-radius: 4px;\n+    font-size: 0.85rem;\n+    margin-left: auto;\n+  }\n+\n+  .collection-tabs-section .tab-buttons {\n+    display: flex;\n+    gap: 2rem;\n+    margin: 1rem 0 1.5rem;\n+    border-bottom: 2px solid #e5e5e5;\n+  }\n+\n+  .collection-tabs-section .tab-buttons button {\n+    padding: 0.5rem 0;\n+    background: none;\n+    border: none;\n+    border-bottom: 2px solid transparent;\n+    font-size: 1rem;\n+    font-weight: 600;\n+    cursor: pointer;\n+    color: #333;\n+  }\n+\n+  .collection-tabs-section .tab-buttons button.active {\n+    border-bottom: 2px solid #000;\n+    color: #000;\n+  }\n+\n+  .collection-tabs-section .product-carousel {\n+    display: none;\n+  }\n+\n+  .collection-tabs-section .product-carousel.active {\n+    display: block;\n+  }\n+\n+  .flickity-viewport {\n+    overflow: hidden;\n+  }\n+\n+  .flickity-slider > .product-card {\n+    width: 220px;\n+    margin-right: 20px;\n+  }\n+\n+  .product-card img {\n+    width: 100%;\n+    border-radius: 8px;\n+  }\n+\n+  .product-card h4 {\n+    font-size: 0.9rem;\n+    margin: 0.5rem 0 0.3rem;\n+  }\n+\n+  .product-card p {\n+    font-size: 0.85rem;\n+    color: #666;\n+    margin: 0;\n+  }\n+</style>\n+\n+<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n   <div class=\"left-image\">\n     {% if section.settings.left_image != blank %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n@@ -92,9 +212,9 @@\n \n   <div class=\"right-content\">\n     <div class=\"tab-header\">\n       <div class=\"tab-title-group\">\n-        <div>\n+        <div class=\"tab-titles\">\n           <h3>{{ section.settings.subheading }}</h3>\n           <h2>{{ section.settings.heading }}</h2>\n         </div>\n         {% if section.settings.shop_all_url %}\n@@ -142,17 +262,15 @@\n     {% endfor %}\n   </div>\n </section>\n \n-\n {% javascript %}\n function initCollectionTabsSlider(section) {\n   if (!section) return;\n \n   const buttons = section.querySelectorAll('.tab-buttons button');\n   const carousels = section.querySelectorAll('.product-carousel');\n \n-  // Attach tab switching\n   buttons.forEach(button => {\n     button.addEventListener('click', () => {\n       const targetTab = button.dataset.tab;\n \n@@ -168,9 +286,8 @@\n       });\n     });\n   });\n \n-  // Initialize Flickity if not already initialized\n   if (typeof Flickity !== 'undefined') {\n     carousels.forEach(carousel => {\n       if (!carousel.classList.contains('flickity-enabled')) {\n         new Flickity(carousel, JSON.parse(carousel.getAttribute('data-flickity-options')));\n@@ -189,16 +306,14 @@\n     initCollectionTabsSlider(section);\n   }\n }\n \n-// Normal load\n document.addEventListener('DOMContentLoaded', () => {\n   document.querySelectorAll('.collection-tabs-section').forEach(section => {\n     loadFlickityAndInitSection(section);\n   });\n });\n \n-// Theme editor support\n document.addEventListener('shopify:section:load', (event) => {\n   const section = event.target.querySelector('.collection-tabs-section');\n   loadFlickityAndInitSection(section);\n });\n"
                },
                {
                    "date": 1748593411359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,134 +76,8 @@\n   ]\n }\n {% endschema %}\n \n-<style>\n-  .collection-tabs-section {\n-    display: grid;\n-    grid-template-columns: 1fr 2fr;\n-    gap: 2rem;\n-    padding: 2rem 0;\n-    margin: 0 auto;\n-    padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px;\n-    margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px;\n-  }\n-\n-  .collection-tabs-section.standard {\n-    max-width: 1200px;\n-  }\n-\n-  .collection-tabs-section.full {\n-    max-width: 100%;\n-  }\n-\n-  .collection-tabs-section .left-image img {\n-    width: 100%;\n-    max-width: 500px;\n-    border-radius: 8px;\n-  }\n-\n-  .collection-tabs-section .right-content {\n-    display: flex;\n-    flex-direction: column;\n-  }\n-\n-  .collection-tabs-section .tab-header {\n-    display: flex;\n-    justify-content: space-between;\n-    align-items: center;\n-  }\n-\n-  .collection-tabs-section .tab-title-group {\n-    display: flex;\n-    justify-content: space-between;\n-    align-items: center;\n-    gap: 1rem;\n-    width: 100%;\n-  }\n-\n-  .collection-tabs-section .tab-titles {\n-    flex-grow: 1;\n-  }\n-\n-  .collection-tabs-section .tab-header h3 {\n-    margin: 0;\n-    font-size: 0.95rem;\n-    color: #666;\n-  }\n-\n-  .collection-tabs-section .tab-header h2 {\n-    margin: 0;\n-    font-size: 2rem;\n-  }\n-\n-  .collection-tabs-section .shop-all-btn {\n-    text-decoration: none;\n-    padding: 0.4rem 0.9rem;\n-    background-color: #000;\n-    color: #fff;\n-    border-radius: 4px;\n-    font-size: 0.85rem;\n-    margin-left: auto;\n-  }\n-\n-  .collection-tabs-section .tab-buttons {\n-    display: flex;\n-    gap: 2rem;\n-    margin: 1rem 0 1.5rem;\n-    border-bottom: 2px solid #e5e5e5;\n-  }\n-\n-  .collection-tabs-section .tab-buttons button {\n-    padding: 0.5rem 0;\n-    background: none;\n-    border: none;\n-    border-bottom: 2px solid transparent;\n-    font-size: 1rem;\n-    font-weight: 600;\n-    cursor: pointer;\n-    color: #333;\n-  }\n-\n-  .collection-tabs-section .tab-buttons button.active {\n-    border-bottom: 2px solid #000;\n-    color: #000;\n-  }\n-\n-  .collection-tabs-section .product-carousel {\n-    display: none;\n-  }\n-\n-  .collection-tabs-section .product-carousel.active {\n-    display: block;\n-  }\n-\n-  .flickity-viewport {\n-    overflow: hidden;\n-  }\n-\n-  .flickity-slider > .product-card {\n-    width: 220px;\n-    margin-right: 20px;\n-  }\n-\n-  .product-card img {\n-    width: 100%;\n-    border-radius: 8px;\n-  }\n-\n-  .product-card h4 {\n-    font-size: 0.9rem;\n-    margin: 0.5rem 0 0.3rem;\n-  }\n-\n-  .product-card p {\n-    font-size: 0.85rem;\n-    color: #666;\n-    margin: 0;\n-  }\n-</style>\n-\n <section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n   <div class=\"left-image\">\n     {% if section.settings.left_image != blank %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n"
                },
                {
                    "date": 1749460024473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,8 +137,16 @@\n   </div>\n </section>\n \n {% javascript %}\n+function initFlickity(carousel) {\n+  if (!carousel.flickityInstance) {\n+    const options = JSON.parse(carousel.getAttribute('data-flickity-options'));\n+    const flkty = new Flickity(carousel, options);\n+    carousel.flickityInstance = flkty;\n+  }\n+}\n+\n function initCollectionTabsSlider(section) {\n   if (!section) return;\n \n   const buttons = section.querySelectorAll('.tab-buttons button');\n@@ -153,22 +161,19 @@\n \n       carousels.forEach(carousel => {\n         if (carousel.dataset.tab === targetTab) {\n           carousel.classList.add('active');\n+          initFlickity(carousel); // lazy-init here\n         } else {\n           carousel.classList.remove('active');\n         }\n       });\n     });\n   });\n \n-  if (typeof Flickity !== 'undefined') {\n-    carousels.forEach(carousel => {\n-      if (!carousel.classList.contains('flickity-enabled')) {\n-        new Flickity(carousel, JSON.parse(carousel.getAttribute('data-flickity-options')));\n-      }\n-    });\n-  }\n+  // Only init the first visible Flickity on page load\n+  const firstActive = section.querySelector('.product-carousel.active');\n+  if (firstActive) initFlickity(firstActive);\n }\n \n function loadFlickityAndInitSection(section) {\n   if (typeof Flickity === 'undefined') {\n@@ -191,4 +196,5 @@\n   const section = event.target.querySelector('.collection-tabs-section');\n   loadFlickityAndInitSection(section);\n });\n {% endjavascript %}\n+\n"
                },
                {
                    "date": 1749460144125,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,16 +137,19 @@\n   </div>\n </section>\n \n {% javascript %}\n+const flickityInstances = new WeakMap();\n+\n function initFlickity(carousel) {\n-  if (!carousel.flickityInstance) {\n+  if (!flickityInstances.has(carousel)) {\n     const options = JSON.parse(carousel.getAttribute('data-flickity-options'));\n     const flkty = new Flickity(carousel, options);\n-    carousel.flickityInstance = flkty;\n+    flickityInstances.set(carousel, flkty);\n   }\n }\n \n+\n function initCollectionTabsSlider(section) {\n   if (!section) return;\n \n   const buttons = section.querySelectorAll('.tab-buttons button');\n"
                },
                {
                    "date": 1749460179417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -162,15 +162,20 @@\n       buttons.forEach(btn => btn.classList.remove('active'));\n       button.classList.add('active');\n \n       carousels.forEach(carousel => {\n-        if (carousel.dataset.tab === targetTab) {\n-          carousel.classList.add('active');\n-          initFlickity(carousel); // lazy-init here\n-        } else {\n-          carousel.classList.remove('active');\n-        }\n-      });\n+  if (carousel.dataset.tab === targetTab) {\n+    carousel.classList.add('active');\n+    initFlickity(carousel);\n+\n+    // Force resize Flickity after it's made visible\n+    const flkty = flickityInstances.get(carousel);\n+    if (flkty) flkty.resize();\n+\n+  } else {\n+    carousel.classList.remove('active');\n+  }\n+});\n     });\n   });\n \n   // Only init the first visible Flickity on page load\n"
                },
                {
                    "date": 1749460198887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -147,9 +147,8 @@\n     flickityInstances.set(carousel, flkty);\n   }\n }\n \n-\n function initCollectionTabsSlider(section) {\n   if (!section) return;\n \n   const buttons = section.querySelectorAll('.tab-buttons button');\n@@ -158,30 +157,35 @@\n   buttons.forEach(button => {\n     button.addEventListener('click', () => {\n       const targetTab = button.dataset.tab;\n \n+      // Update button states\n       buttons.forEach(btn => btn.classList.remove('active'));\n       button.classList.add('active');\n \n+      // Update carousels\n       carousels.forEach(carousel => {\n-  if (carousel.dataset.tab === targetTab) {\n-    carousel.classList.add('active');\n-    initFlickity(carousel);\n+        if (carousel.dataset.tab === targetTab) {\n+          carousel.classList.add('active');\n+          initFlickity(carousel);\n \n-    // Force resize Flickity after it's made visible\n-    const flkty = flickityInstances.get(carousel);\n-    if (flkty) flkty.resize();\n-\n-  } else {\n-    carousel.classList.remove('active');\n-  }\n-});\n+          // Resize Flickity to adapt layout\n+          const flkty = flickityInstances.get(carousel);\n+          if (flkty) flkty.resize();\n+        } else {\n+          carousel.classList.remove('active');\n+        }\n+      });\n     });\n   });\n \n-  // Only init the first visible Flickity on page load\n+  // Init the first active carousel\n   const firstActive = section.querySelector('.product-carousel.active');\n-  if (firstActive) initFlickity(firstActive);\n+  if (firstActive) {\n+    initFlickity(firstActive);\n+    const flkty = flickityInstances.get(firstActive);\n+    if (flkty) flkty.resize();\n+  }\n }\n \n function loadFlickityAndInitSection(section) {\n   if (typeof Flickity === 'undefined') {\n@@ -205,4 +209,5 @@\n   loadFlickityAndInitSection(section);\n });\n {% endjavascript %}\n \n+\n"
                },
                {
                    "date": 1749460375171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,67 @@\n+<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n+  <div class=\"left-image\">\n+    {% if section.settings.left_image %}\n+      <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n+    {% endif %}\n+  </div>\n+\n+  <div class=\"right-content\">\n+    <div class=\"tab-header\">\n+      <div class=\"tab-title-group\">\n+        <div class=\"tab-titles\">\n+          <h3>{{ section.settings.subheading }}</h3>\n+          <h2>{{ section.settings.heading }}</h2>\n+        </div>\n+        {% if section.settings.shop_all_url %}\n+          <a href=\"{{ section.settings.shop_all_url }}\" class=\"shop-all-btn\">Shop All</a>\n+        {% endif %}\n+      </div>\n+    </div>\n+\n+    <div class=\"tab-buttons\" id=\"tab-buttons-{{ section.id }}\">\n+      {% for block in section.blocks %}\n+        <button\n+          class=\"tab-button {% if forloop.first %}active{% endif %}\"\n+          data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\">\n+          {{ block.settings.tab_name }}\n+        </button>\n+      {% endfor %}\n+    </div>\n+\n+    <div class=\"tab-content\" id=\"tab-content-{{ section.id }}\">\n+      {% for block in section.blocks %}\n+        {% assign block_collection = collections[block.settings.collection] %}\n+        <div\n+          class=\"product-carousel js-flickity {% if forloop.first %}active{% endif %}\"\n+          data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n+          data-flickity-options='{\n+            \"contain\": true,\n+            \"wrapAround\": true,\n+            \"pageDots\": false,\n+            \"prevNextButtons\": {{ section.settings.show_arrows }}\n+          }'\n+        >\n+          {% if block_collection %}\n+            {% assign limit = block.settings.product_limit | default: 10 %}\n+            {% for product in block_collection.products limit: limit %}\n+              <div class=\"product-card\">\n+                <a href=\"{{ product.url }}\">\n+                  <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n+                  <h4>{{ product.title }}</h4>\n+                  <p>From {{ product.price | money }}</p>\n+                </a>\n+              </div>\n+            {% endfor %}\n+          {% else %}\n+            <p>No products found in this collection.</p>\n+          {% endif %}\n+        </div>\n+      {% endfor %}\n+    </div>\n+  </div>\n+</section>\n+\n {% schema %}\n {\n   \"name\": \"Product Slider\",\n   \"settings\": [\n@@ -63,8 +126,16 @@\n         {\n           \"type\": \"collection\",\n           \"id\": \"collection\",\n           \"label\": \"Collection\"\n+        },\n+        {\n+          \"type\": \"range\",\n+          \"id\": \"product_limit\",\n+          \"label\": \"Number of Products\",\n+          \"min\": 1,\n+          \"max\": 20,\n+          \"default\": 10\n         }\n       ]\n     }\n   ],\n@@ -76,138 +147,65 @@\n   ]\n }\n {% endschema %}\n \n-<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n-  <div class=\"left-image\">\n-    {% if section.settings.left_image != blank %}\n-      <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n-    {% endif %}\n-  </div>\n-\n-  <div class=\"right-content\">\n-    <div class=\"tab-header\">\n-      <div class=\"tab-title-group\">\n-        <div class=\"tab-titles\">\n-          <h3>{{ section.settings.subheading }}</h3>\n-          <h2>{{ section.settings.heading }}</h2>\n-        </div>\n-        {% if section.settings.shop_all_url %}\n-          <a href=\"{{ section.settings.shop_all_url }}\" class=\"shop-all-btn\">Shop All</a>\n-        {% endif %}\n-      </div>\n-    </div>\n-\n-    <div class=\"tab-buttons\">\n-      {% for block in section.blocks %}\n-        <button\n-          class=\"{% if forloop.first %}active{% endif %}\"\n-          data-tab=\"tab-{{ forloop.index }}\">\n-          {{ block.settings.tab_name }}\n-        </button>\n-      {% endfor %}\n-    </div>\n-\n-    {% for block in section.blocks %}\n-      {% assign block_collection = collections[block.settings.collection] %}\n-      <div\n-        class=\"product-carousel js-flickity {% if forloop.first %}active{% endif %}\"\n-        data-tab=\"tab-{{ forloop.index }}\"\n-        data-flickity-options='{\n-          \"contain\": true,\n-          \"wrapAround\": true,\n-          \"pageDots\": false,\n-          \"prevNextButtons\": {{ section.settings.show_arrows }}\n-        }'\n-      >\n-        {% if block_collection != blank %}\n-          {% for product in block_collection.products limit: 10 %}\n-            <div class=\"product-card\">\n-              <a href=\"{{ product.url }}\">\n-                <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n-                <h4>{{ product.title }}</h4>\n-                <p>From {{ product.price | money }}</p>\n-              </a>\n-            </div>\n-          {% endfor %}\n-        {% else %}\n-          <p>No products found in this collection.</p>\n-        {% endif %}\n-      </div>\n-    {% endfor %}\n-  </div>\n-</section>\n-\n {% javascript %}\n-const flickityInstances = new WeakMap();\n+function initTabs(sectionId) {\n+  const buttons = document.querySelectorAll(`#tab-buttons-${sectionId} .tab-button`);\n+  const carousels = document.querySelectorAll(`#tab-content-${sectionId} .product-carousel`);\n \n-function initFlickity(carousel) {\n-  if (!flickityInstances.has(carousel)) {\n-    const options = JSON.parse(carousel.getAttribute('data-flickity-options'));\n-    const flkty = new Flickity(carousel, options);\n-    flickityInstances.set(carousel, flkty);\n-  }\n-}\n-\n-function initCollectionTabsSlider(section) {\n-  if (!section) return;\n-\n-  const buttons = section.querySelectorAll('.tab-buttons button');\n-  const carousels = section.querySelectorAll('.product-carousel');\n-\n-  buttons.forEach(button => {\n+  buttons.forEach((button) => {\n     button.addEventListener('click', () => {\n-      const targetTab = button.dataset.tab;\n+      const target = button.dataset.tab;\n \n-      // Update button states\n-      buttons.forEach(btn => btn.classList.remove('active'));\n+      buttons.forEach((btn) => btn.classList.remove('active'));\n       button.classList.add('active');\n \n-      // Update carousels\n-      carousels.forEach(carousel => {\n-        if (carousel.dataset.tab === targetTab) {\n+      carousels.forEach((carousel) => {\n+        if (carousel.dataset.tab === target) {\n           carousel.classList.add('active');\n-          initFlickity(carousel);\n \n-          // Resize Flickity to adapt layout\n-          const flkty = flickityInstances.get(carousel);\n-          if (flkty) flkty.resize();\n+          if (!carousel.classList.contains('flickity-initialized')) {\n+            const options = JSON.parse(carousel.getAttribute('data-flickity-options'));\n+            new Flickity(carousel, options);\n+            carousel.classList.add('flickity-initialized');\n+          }\n         } else {\n           carousel.classList.remove('active');\n         }\n       });\n     });\n   });\n \n-  // Init the first active carousel\n-  const firstActive = section.querySelector('.product-carousel.active');\n-  if (firstActive) {\n-    initFlickity(firstActive);\n-    const flkty = flickityInstances.get(firstActive);\n-    if (flkty) flkty.resize();\n+  // Init first carousel\n+  const firstCarousel = document.querySelector(`#tab-content-${sectionId} .product-carousel.active`);\n+  if (firstCarousel && !firstCarousel.classList.contains('flickity-initialized')) {\n+    const options = JSON.parse(firstCarousel.getAttribute('data-flickity-options'));\n+    new Flickity(firstCarousel, options);\n+    firstCarousel.classList.add('flickity-initialized');\n   }\n }\n \n-function loadFlickityAndInitSection(section) {\n+function loadFlickityAndTabs(sectionId) {\n   if (typeof Flickity === 'undefined') {\n     const script = document.createElement('script');\n     script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n-    script.onload = () => initCollectionTabsSlider(section);\n+    script.onload = () => initTabs(sectionId);\n     document.head.appendChild(script);\n   } else {\n-    initCollectionTabsSlider(section);\n+    initTabs(sectionId);\n   }\n }\n \n document.addEventListener('DOMContentLoaded', () => {\n-  document.querySelectorAll('.collection-tabs-section').forEach(section => {\n-    loadFlickityAndInitSection(section);\n+  document.querySelectorAll('.collection-tabs-section').forEach((section) => {\n+    const sectionId = section.className.match(/section_width_(\\w+)/) ? section.getAttribute('id') || section.dataset.sectionId : null;\n+    if (sectionId) loadFlickityAndTabs(sectionId);\n+    else loadFlickityAndTabs(section.id);\n   });\n });\n \n document.addEventListener('shopify:section:load', (event) => {\n   const section = event.target.querySelector('.collection-tabs-section');\n-  loadFlickityAndInitSection(section);\n+  if (section) loadFlickityAndTabs(section.id || section.dataset.sectionId);\n });\n {% endjavascript %}\n-\n-\n"
                },
                {
                    "date": 1749460543124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,8 @@\n-<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n+<script src=\"https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js\"></script>\n+<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.min.css\" />\n+\n+<section id=\"collection-tabs-{{ section.id }}\" class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n   <div class=\"left-image\">\n     {% if section.settings.left_image %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n@@ -17,9 +20,9 @@\n         {% endif %}\n       </div>\n     </div>\n \n-    <div class=\"tab-buttons\" id=\"tab-buttons-{{ section.id }}\">\n+    <div class=\"tab-buttons\">\n       {% for block in section.blocks %}\n         <button\n           class=\"tab-button {% if forloop.first %}active{% endif %}\"\n           data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\">\n@@ -27,21 +30,22 @@\n         </button>\n       {% endfor %}\n     </div>\n \n-    <div class=\"tab-content\" id=\"tab-content-{{ section.id }}\">\n-      {% for block in section.blocks %}\n-        {% assign block_collection = collections[block.settings.collection] %}\n+    {% for block in section.blocks %}\n+      {% assign block_collection = collections[block.settings.collection] %}\n+      <div\n+        class=\"product-carousel-wrapper {% if forloop.first %}active{% endif %}\"\n+        data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n+      >\n         <div\n-          class=\"product-carousel js-flickity {% if forloop.first %}active{% endif %}\"\n-          data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n+          class=\"product-carousel js-flickity\"\n           data-flickity-options='{\n             \"contain\": true,\n             \"wrapAround\": true,\n             \"pageDots\": false,\n             \"prevNextButtons\": {{ section.settings.show_arrows }}\n-          }'\n-        >\n+          }'>\n           {% if block_collection %}\n             {% assign limit = block.settings.product_limit | default: 10 %}\n             {% for product in block_collection.products limit: limit %}\n               <div class=\"product-card\">\n@@ -55,13 +59,58 @@\n           {% else %}\n             <p>No products found in this collection.</p>\n           {% endif %}\n         </div>\n-      {% endfor %}\n-    </div>\n+      </div>\n+    {% endfor %}\n   </div>\n </section>\n \n+{% javascript %}\n+document.addEventListener(\"DOMContentLoaded\", function () {\n+  const sections = document.querySelectorAll(\".collection-tabs-section\");\n+\n+  sections.forEach(section => {\n+    const buttons = section.querySelectorAll(\".tab-button\");\n+    const wrappers = section.querySelectorAll(\".product-carousel-wrapper\");\n+\n+    buttons.forEach(button => {\n+      button.addEventListener(\"click\", () => {\n+        const target = button.dataset.tab;\n+\n+        // Toggle buttons\n+        buttons.forEach(btn => btn.classList.remove(\"active\"));\n+        button.classList.add(\"active\");\n+\n+        // Toggle carousels\n+        wrappers.forEach(wrapper => {\n+          if (wrapper.dataset.tab === target) {\n+            wrapper.classList.add(\"active\");\n+            // Lazy init Flickity\n+            const carousel = wrapper.querySelector(\".js-flickity\");\n+            if (carousel && !carousel.classList.contains(\"flickity-enabled\")) {\n+              const options = JSON.parse(carousel.dataset.flickityOptions);\n+              new Flickity(carousel, options);\n+            }\n+          } else {\n+            wrapper.classList.remove(\"active\");\n+          }\n+        });\n+      });\n+    });\n+\n+    // Init first carousel\n+    const firstWrapper = section.querySelector(\".product-carousel-wrapper.active .js-flickity\");\n+    if (firstWrapper && !firstWrapper.classList.contains(\"flickity-enabled\")) {\n+      const options = JSON.parse(firstWrapper.dataset.flickityOptions);\n+      new Flickity(firstWrapper, options);\n+    }\n+  });\n+});\n+{% endjavascript %}\n+\n+\n+\n {% schema %}\n {\n   \"name\": \"Product Slider\",\n   \"settings\": [\n@@ -128,15 +177,15 @@\n           \"id\": \"collection\",\n           \"label\": \"Collection\"\n         },\n         {\n-          \"type\": \"range\",\n-          \"id\": \"product_limit\",\n-          \"label\": \"Number of Products\",\n-          \"min\": 1,\n-          \"max\": 20,\n-          \"default\": 10\n-        }\n+  \"type\": \"range\",\n+  \"id\": \"product_limit\",\n+  \"label\": \"Number of Products\",\n+  \"min\": 1,\n+  \"max\": 20,\n+  \"default\": 10\n+}\n       ]\n     }\n   ],\n   \"presets\": [\n@@ -146,66 +195,4 @@\n     }\n   ]\n }\n {% endschema %}\n-\n-{% javascript %}\n-function initTabs(sectionId) {\n-  const buttons = document.querySelectorAll(`#tab-buttons-${sectionId} .tab-button`);\n-  const carousels = document.querySelectorAll(`#tab-content-${sectionId} .product-carousel`);\n-\n-  buttons.forEach((button) => {\n-    button.addEventListener('click', () => {\n-      const target = button.dataset.tab;\n-\n-      buttons.forEach((btn) => btn.classList.remove('active'));\n-      button.classList.add('active');\n-\n-      carousels.forEach((carousel) => {\n-        if (carousel.dataset.tab === target) {\n-          carousel.classList.add('active');\n-\n-          if (!carousel.classList.contains('flickity-initialized')) {\n-            const options = JSON.parse(carousel.getAttribute('data-flickity-options'));\n-            new Flickity(carousel, options);\n-            carousel.classList.add('flickity-initialized');\n-          }\n-        } else {\n-          carousel.classList.remove('active');\n-        }\n-      });\n-    });\n-  });\n-\n-  // Init first carousel\n-  const firstCarousel = document.querySelector(`#tab-content-${sectionId} .product-carousel.active`);\n-  if (firstCarousel && !firstCarousel.classList.contains('flickity-initialized')) {\n-    const options = JSON.parse(firstCarousel.getAttribute('data-flickity-options'));\n-    new Flickity(firstCarousel, options);\n-    firstCarousel.classList.add('flickity-initialized');\n-  }\n-}\n-\n-function loadFlickityAndTabs(sectionId) {\n-  if (typeof Flickity === 'undefined') {\n-    const script = document.createElement('script');\n-    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n-    script.onload = () => initTabs(sectionId);\n-    document.head.appendChild(script);\n-  } else {\n-    initTabs(sectionId);\n-  }\n-}\n-\n-document.addEventListener('DOMContentLoaded', () => {\n-  document.querySelectorAll('.collection-tabs-section').forEach((section) => {\n-    const sectionId = section.className.match(/section_width_(\\w+)/) ? section.getAttribute('id') || section.dataset.sectionId : null;\n-    if (sectionId) loadFlickityAndTabs(sectionId);\n-    else loadFlickityAndTabs(section.id);\n-  });\n-});\n-\n-document.addEventListener('shopify:section:load', (event) => {\n-  const section = event.target.querySelector('.collection-tabs-section');\n-  if (section) loadFlickityAndTabs(section.id || section.dataset.sectionId);\n-});\n-{% endjavascript %}\n"
                },
                {
                    "date": 1749460730030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n       {% endfor %}\n     </div>\n \n     {% for block in section.blocks %}\n-      {% assign block_collection = collections[block.settings.collection] %}\n+      {% assign block_collection = block.settings.collection %}\n       <div\n         class=\"product-carousel-wrapper {% if forloop.first %}active{% endif %}\"\n         data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n       >\n"
                },
                {
                    "date": 1749460788273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,39 +31,40 @@\n       {% endfor %}\n     </div>\n \n     {% for block in section.blocks %}\n-      {% assign block_collection = block.settings.collection %}\n-      <div\n-        class=\"product-carousel-wrapper {% if forloop.first %}active{% endif %}\"\n-        data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n-      >\n-        <div\n-          class=\"product-carousel js-flickity\"\n-          data-flickity-options='{\n-            \"contain\": true,\n-            \"wrapAround\": true,\n-            \"pageDots\": false,\n-            \"prevNextButtons\": {{ section.settings.show_arrows }}\n-          }'>\n-          {% if block_collection %}\n-            {% assign limit = block.settings.product_limit | default: 10 %}\n-            {% for product in block_collection.products limit: limit %}\n-              <div class=\"product-card\">\n-                <a href=\"{{ product.url }}\">\n-                  <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n-                  <h4>{{ product.title }}</h4>\n-                  <p>From {{ product.price | money }}</p>\n-                </a>\n-              </div>\n-            {% endfor %}\n-          {% else %}\n-            <p>No products found in this collection.</p>\n-          {% endif %}\n-        </div>\n-      </div>\n-    {% endfor %}\n+  {% assign block_collection = block.settings.collection %}\n+  <div\n+    class=\"product-carousel-wrapper {% if forloop.first %}active{% endif %}\"\n+    data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n+  >\n+    <div\n+      class=\"product-carousel js-flickity\"\n+      data-flickity-options='{\n+        \"contain\": true,\n+        \"wrapAround\": true,\n+        \"pageDots\": false,\n+        \"prevNextButtons\": {{ section.settings.show_arrows }}\n+      }'>\n+      {% if block_collection %}\n+        {% assign limit = block.settings.product_limit | default: 10 %}\n+        {% for product in block_collection.products limit: limit %}\n+          <div class=\"product-card\">\n+            <a href=\"{{ product.url }}\">\n+              <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n+              <h4>{{ product.title }}</h4>\n+              <p>From {{ product.price | money }}</p>\n+            </a>\n+          </div>\n+        {% endfor %}\n+      {% else %}\n+        <p>No products found in this collection.</p>\n+      {% endif %}\n+    </div>\n   </div>\n+{% endfor %}\n+\n+  </div>\n </section>\n \n {% javascript %}\n document.addEventListener(\"DOMContentLoaded\", function () {\n"
                },
                {
                    "date": 1749460839275,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,11 @@\n       {% endfor %}\n     </div>\n \n     {% for block in section.blocks %}\n-  {% assign block_collection = block.settings.collection %}\n+  {% assign collection_handle = block.settings.collection.handle %}\n+{% assign block_collection = collections[collection_handle] %}\n+\n   <div\n     class=\"product-carousel-wrapper {% if forloop.first %}active{% endif %}\"\n     data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n   >\n"
                },
                {
                    "date": 1749460863188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,11 +30,11 @@\n         </button>\n       {% endfor %}\n     </div>\n \n-    {% for block in section.blocks %}\n+{% for block in section.blocks %}\n   {% assign collection_handle = block.settings.collection.handle %}\n-{% assign block_collection = collections[collection_handle] %}\n+  {% assign block_collection = collections[collection_handle] %}\n \n   <div\n     class=\"product-carousel-wrapper {% if forloop.first %}active{% endif %}\"\n     data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n@@ -46,9 +46,9 @@\n         \"wrapAround\": true,\n         \"pageDots\": false,\n         \"prevNextButtons\": {{ section.settings.show_arrows }}\n       }'>\n-      {% if block_collection %}\n+      {% if block_collection != blank and block_collection.products.size > 0 %}\n         {% assign limit = block.settings.product_limit | default: 10 %}\n         {% for product in block_collection.products limit: limit %}\n           <div class=\"product-card\">\n             <a href=\"{{ product.url }}\">\n@@ -64,8 +64,9 @@\n     </div>\n   </div>\n {% endfor %}\n \n+\n   </div>\n </section>\n \n {% javascript %}\n"
                },
                {
                    "date": 1749460933459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,10 +31,9 @@\n       {% endfor %}\n     </div>\n \n {% for block in section.blocks %}\n-  {% assign collection_handle = block.settings.collection.handle %}\n-  {% assign block_collection = collections[collection_handle] %}\n+  {% assign block_collection = collections[block.settings.collection] %}\n \n   <div\n     class=\"product-carousel-wrapper {% if forloop.first %}active{% endif %}\"\n     data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n"
                },
                {
                    "date": 1749460948193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,48 +72,36 @@\n document.addEventListener(\"DOMContentLoaded\", function () {\n   const sections = document.querySelectorAll(\".collection-tabs-section\");\n \n   sections.forEach(section => {\n-    const buttons = section.querySelectorAll(\".tab-button\");\n-    const wrappers = section.querySelectorAll(\".product-carousel-wrapper\");\n+    const buttons = section.querySelectorAll(\".tab-buttons button\");\n+    const carousels = section.querySelectorAll(\".product-carousel\");\n \n     buttons.forEach(button => {\n       button.addEventListener(\"click\", () => {\n-        const target = button.dataset.tab;\n+        const tab = button.dataset.tab;\n \n-        // Toggle buttons\n+        // Toggle active button\n         buttons.forEach(btn => btn.classList.remove(\"active\"));\n         button.classList.add(\"active\");\n \n-        // Toggle carousels\n-        wrappers.forEach(wrapper => {\n-          if (wrapper.dataset.tab === target) {\n-            wrapper.classList.add(\"active\");\n-            // Lazy init Flickity\n-            const carousel = wrapper.querySelector(\".js-flickity\");\n-            if (carousel && !carousel.classList.contains(\"flickity-enabled\")) {\n-              const options = JSON.parse(carousel.dataset.flickityOptions);\n-              new Flickity(carousel, options);\n-            }\n+        // Toggle active carousel\n+        carousels.forEach(carousel => {\n+          if (carousel.dataset.tab === tab) {\n+            carousel.classList.add(\"active\");\n           } else {\n-            wrapper.classList.remove(\"active\");\n+            carousel.classList.remove(\"active\");\n           }\n         });\n       });\n     });\n-\n-    // Init first carousel\n-    const firstWrapper = section.querySelector(\".product-carousel-wrapper.active .js-flickity\");\n-    if (firstWrapper && !firstWrapper.classList.contains(\"flickity-enabled\")) {\n-      const options = JSON.parse(firstWrapper.dataset.flickityOptions);\n-      new Flickity(firstWrapper, options);\n-    }\n   });\n });\n {% endjavascript %}\n \n \n \n+\n {% schema %}\n {\n   \"name\": \"Product Slider\",\n   \"settings\": [\n"
                },
                {
                    "date": 1749461046089,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,107 +1,4 @@\n-<script src=\"https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js\"></script>\n-<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.min.css\" />\n-\n-<section id=\"collection-tabs-{{ section.id }}\" class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n-  <div class=\"left-image\">\n-    {% if section.settings.left_image %}\n-      <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n-    {% endif %}\n-  </div>\n-\n-  <div class=\"right-content\">\n-    <div class=\"tab-header\">\n-      <div class=\"tab-title-group\">\n-        <div class=\"tab-titles\">\n-          <h3>{{ section.settings.subheading }}</h3>\n-          <h2>{{ section.settings.heading }}</h2>\n-        </div>\n-        {% if section.settings.shop_all_url %}\n-          <a href=\"{{ section.settings.shop_all_url }}\" class=\"shop-all-btn\">Shop All</a>\n-        {% endif %}\n-      </div>\n-    </div>\n-\n-    <div class=\"tab-buttons\">\n-      {% for block in section.blocks %}\n-        <button\n-          class=\"tab-button {% if forloop.first %}active{% endif %}\"\n-          data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\">\n-          {{ block.settings.tab_name }}\n-        </button>\n-      {% endfor %}\n-    </div>\n-\n-{% for block in section.blocks %}\n-  {% assign block_collection = collections[block.settings.collection] %}\n-\n-  <div\n-    class=\"product-carousel-wrapper {% if forloop.first %}active{% endif %}\"\n-    data-tab=\"tab-{{ forloop.index0 }}-{{ section.id }}\"\n-  >\n-    <div\n-      class=\"product-carousel js-flickity\"\n-      data-flickity-options='{\n-        \"contain\": true,\n-        \"wrapAround\": true,\n-        \"pageDots\": false,\n-        \"prevNextButtons\": {{ section.settings.show_arrows }}\n-      }'>\n-      {% if block_collection != blank and block_collection.products.size > 0 %}\n-        {% assign limit = block.settings.product_limit | default: 10 %}\n-        {% for product in block_collection.products limit: limit %}\n-          <div class=\"product-card\">\n-            <a href=\"{{ product.url }}\">\n-              <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n-              <h4>{{ product.title }}</h4>\n-              <p>From {{ product.price | money }}</p>\n-            </a>\n-          </div>\n-        {% endfor %}\n-      {% else %}\n-        <p>No products found in this collection.</p>\n-      {% endif %}\n-    </div>\n-  </div>\n-{% endfor %}\n-\n-\n-  </div>\n-</section>\n-\n-{% javascript %}\n-document.addEventListener(\"DOMContentLoaded\", function () {\n-  const sections = document.querySelectorAll(\".collection-tabs-section\");\n-\n-  sections.forEach(section => {\n-    const buttons = section.querySelectorAll(\".tab-buttons button\");\n-    const carousels = section.querySelectorAll(\".product-carousel\");\n-\n-    buttons.forEach(button => {\n-      button.addEventListener(\"click\", () => {\n-        const tab = button.dataset.tab;\n-\n-        // Toggle active button\n-        buttons.forEach(btn => btn.classList.remove(\"active\"));\n-        button.classList.add(\"active\");\n-\n-        // Toggle active carousel\n-        carousels.forEach(carousel => {\n-          if (carousel.dataset.tab === tab) {\n-            carousel.classList.add(\"active\");\n-          } else {\n-            carousel.classList.remove(\"active\");\n-          }\n-        });\n-      });\n-    });\n-  });\n-});\n-{% endjavascript %}\n-\n-\n-\n-\n {% schema %}\n {\n   \"name\": \"Product Slider\",\n   \"settings\": [\n@@ -166,17 +63,9 @@\n         {\n           \"type\": \"collection\",\n           \"id\": \"collection\",\n           \"label\": \"Collection\"\n-        },\n-        {\n-  \"type\": \"range\",\n-  \"id\": \"product_limit\",\n-  \"label\": \"Number of Products\",\n-  \"min\": 1,\n-  \"max\": 20,\n-  \"default\": 10\n-}\n+        }\n       ]\n     }\n   ],\n   \"presets\": [\n@@ -186,4 +75,139 @@\n     }\n   ]\n }\n {% endschema %}\n+\n+<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n+  <div class=\"left-image\">\n+    {% if section.settings.left_image != blank %}\n+      <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n+    {% endif %}\n+  </div>\n+\n+  <div class=\"right-content\">\n+    <div class=\"tab-header\">\n+      <div class=\"tab-title-group\">\n+        <div class=\"tab-titles\">\n+          <h3>{{ section.settings.subheading }}</h3>\n+          <h2>{{ section.settings.heading }}</h2>\n+        </div>\n+        {% if section.settings.shop_all_url %}\n+          <a href=\"{{ section.settings.shop_all_url }}\" class=\"shop-all-btn\">Shop All</a>\n+        {% endif %}\n+      </div>\n+    </div>\n+\n+    <div class=\"tab-buttons\">\n+      {% for block in section.blocks %}\n+        <button\n+          class=\"{% if forloop.first %}active{% endif %}\"\n+          data-tab=\"tab-{{ forloop.index }}\">\n+          {{ block.settings.tab_name }}\n+        </button>\n+      {% endfor %}\n+    </div>\n+\n+    {% for block in section.blocks %}\n+      {% assign block_collection = collections[block.settings.collection] %}\n+      <div\n+        class=\"product-carousel js-flickity {% if forloop.first %}active{% endif %}\"\n+        data-tab=\"tab-{{ forloop.index }}\"\n+        data-flickity-options='{\n+          \"contain\": true,\n+          \"wrapAround\": true,\n+          \"pageDots\": false,\n+          \"prevNextButtons\": {{ section.settings.show_arrows }}\n+        }'\n+      >\n+        {% if block_collection != blank %}\n+          {% for product in block_collection.products limit: 10 %}\n+            <div class=\"product-card\">\n+              <a href=\"{{ product.url }}\">\n+                <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n+                <h4>{{ product.title }}</h4>\n+                <p>From {{ product.price | money }}</p>\n+              </a>\n+            </div>\n+          {% endfor %}\n+        {% else %}\n+          <p>No products found in this collection.</p>\n+        {% endif %}\n+      </div>\n+    {% endfor %}\n+  </div>\n+</section>\n+\n+{% javascript %}\n+const flickityInstances = new WeakMap();\n+\n+function initFlickity(carousel) {\n+  if (!flickityInstances.has(carousel)) {\n+    const options = JSON.parse(carousel.getAttribute('data-flickity-options'));\n+    const flkty = new Flickity(carousel, options);\n+    flickityInstances.set(carousel, flkty);\n+  }\n+}\n+\n+function initCollectionTabsSlider(section) {\n+  if (!section) return;\n+\n+  const buttons = section.querySelectorAll('.tab-buttons button');\n+  const carousels = section.querySelectorAll('.product-carousel');\n+\n+  buttons.forEach(button => {\n+    button.addEventListener('click', () => {\n+      const targetTab = button.dataset.tab;\n+\n+      // Update button states\n+      buttons.forEach(btn => btn.classList.remove('active'));\n+      button.classList.add('active');\n+\n+      // Update carousels\n+      carousels.forEach(carousel => {\n+        if (carousel.dataset.tab === targetTab) {\n+          carousel.classList.add('active');\n+          initFlickity(carousel);\n+\n+          // Resize Flickity to adapt layout\n+          const flkty = flickityInstances.get(carousel);\n+          if (flkty) flkty.resize();\n+        } else {\n+          carousel.classList.remove('active');\n+        }\n+      });\n+    });\n+  });\n+\n+  // Init the first active carousel\n+  const firstActive = section.querySelector('.product-carousel.active');\n+  if (firstActive) {\n+    initFlickity(firstActive);\n+    const flkty = flickityInstances.get(firstActive);\n+    if (flkty) flkty.resize();\n+  }\n+}\n+\n+function loadFlickityAndInitSection(section) {\n+  if (typeof Flickity === 'undefined') {\n+    const script = document.createElement('script');\n+    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n+    script.onload = () => initCollectionTabsSlider(section);\n+    document.head.appendChild(script);\n+  } else {\n+    initCollectionTabsSlider(section);\n+  }\n+}\n+\n+document.addEventListener('DOMContentLoaded', () => {\n+  document.querySelectorAll('.collection-tabs-section').forEach(section => {\n+    loadFlickityAndInitSection(section);\n+  });\n+});\n+\n+document.addEventListener('shopify:section:load', (event) => {\n+  const section = event.target.querySelector('.collection-tabs-section');\n+  loadFlickityAndInitSection(section);\n+});\n+{% endjavascript %}\n+\n+\n"
                },
                {
                    "date": 1749461104024,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -137,18 +137,8 @@\n   </div>\n </section>\n \n {% javascript %}\n-const flickityInstances = new WeakMap();\n-\n-function initFlickity(carousel) {\n-  if (!flickityInstances.has(carousel)) {\n-    const options = JSON.parse(carousel.getAttribute('data-flickity-options'));\n-    const flkty = new Flickity(carousel, options);\n-    flickityInstances.set(carousel, flkty);\n-  }\n-}\n-\n function initCollectionTabsSlider(section) {\n   if (!section) return;\n \n   const buttons = section.querySelectorAll('.tab-buttons button');\n@@ -157,34 +147,27 @@\n   buttons.forEach(button => {\n     button.addEventListener('click', () => {\n       const targetTab = button.dataset.tab;\n \n-      // Update button states\n       buttons.forEach(btn => btn.classList.remove('active'));\n       button.classList.add('active');\n \n-      // Update carousels\n       carousels.forEach(carousel => {\n         if (carousel.dataset.tab === targetTab) {\n           carousel.classList.add('active');\n-          initFlickity(carousel);\n-\n-          // Resize Flickity to adapt layout\n-          const flkty = flickityInstances.get(carousel);\n-          if (flkty) flkty.resize();\n         } else {\n           carousel.classList.remove('active');\n         }\n       });\n     });\n   });\n \n-  // Init the first active carousel\n-  const firstActive = section.querySelector('.product-carousel.active');\n-  if (firstActive) {\n-    initFlickity(firstActive);\n-    const flkty = flickityInstances.get(firstActive);\n-    if (flkty) flkty.resize();\n+  if (typeof Flickity !== 'undefined') {\n+    carousels.forEach(carousel => {\n+      if (!carousel.classList.contains('flickity-enabled')) {\n+        new Flickity(carousel, JSON.parse(carousel.getAttribute('data-flickity-options')));\n+      }\n+    });\n   }\n }\n \n function loadFlickityAndInitSection(section) {\n@@ -208,6 +191,4 @@\n   const section = event.target.querySelector('.collection-tabs-section');\n   loadFlickityAndInitSection(section);\n });\n {% endjavascript %}\n-\n-\n"
                },
                {
                    "date": 1749461361696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,8 +63,27 @@\n         {\n           \"type\": \"collection\",\n           \"id\": \"collection\",\n           \"label\": \"Collection\"\n+        },\n+        {\n+          \"type\": \"range\",\n+          \"id\": \"product_limit\",\n+          \"label\": \"Number of Products\",\n+          \"min\": 1,\n+          \"max\": 20,\n+          \"default\": 10\n+        },\n+        {\n+          \"type\": \"select\",\n+          \"id\": \"product_card_size\",\n+          \"label\": \"Product Card Size\",\n+          \"default\": \"medium\",\n+          \"options\": [\n+            { \"value\": \"small\", \"label\": \"Small\" },\n+            { \"value\": \"medium\", \"label\": \"Medium\" },\n+            { \"value\": \"large\", \"label\": \"Large\" }\n+          ]\n         }\n       ]\n     }\n   ],\n@@ -78,9 +97,9 @@\n {% endschema %}\n \n <section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n   <div class=\"left-image\">\n-    {% if section.settings.left_image != blank %}\n+    {% if section.settings.left_image %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n   </div>\n \n@@ -99,30 +118,26 @@\n \n     <div class=\"tab-buttons\">\n       {% for block in section.blocks %}\n         <button\n-          class=\"{% if forloop.first %}active{% endif %}\"\n-          data-tab=\"tab-{{ forloop.index }}\">\n+          class=\"tab-button {% if forloop.first %}active{% endif %}\"\n+          data-tab=\"tab-{{ forloop.index0 }}\">\n           {{ block.settings.tab_name }}\n         </button>\n       {% endfor %}\n     </div>\n \n     {% for block in section.blocks %}\n-      {% assign block_collection = collections[block.settings.collection] %}\n+      {% assign collection_handle = block.settings.collection.handle %}\n+      {% assign block_collection = collections[collection_handle] %}\n       <div\n-        class=\"product-carousel js-flickity {% if forloop.first %}active{% endif %}\"\n-        data-tab=\"tab-{{ forloop.index }}\"\n-        data-flickity-options='{\n-          \"contain\": true,\n-          \"wrapAround\": true,\n-          \"pageDots\": false,\n-          \"prevNextButtons\": {{ section.settings.show_arrows }}\n-        }'\n+        class=\"product-carousel {% if forloop.first %}active{% endif %}\"\n+        data-tab=\"tab-{{ forloop.index0 }}\"\n       >\n         {% if block_collection != blank %}\n-          {% for product in block_collection.products limit: 10 %}\n-            <div class=\"product-card\">\n+          {% assign limit = block.settings.product_limit | default: 10 %}\n+          {% for product in block_collection.products limit: limit %}\n+            <div class=\"product-card product-size-{{ block.settings.product_card_size }}\">\n               <a href=\"{{ product.url }}\">\n                 <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n                 <h4>{{ product.title }}</h4>\n                 <p>From {{ product.price | money }}</p>\n@@ -137,58 +152,26 @@\n   </div>\n </section>\n \n {% javascript %}\n-function initCollectionTabsSlider(section) {\n-  if (!section) return;\n+document.addEventListener(\"DOMContentLoaded\", function () {\n+  const sections = document.querySelectorAll(\".collection-tabs-section\");\n \n-  const buttons = section.querySelectorAll('.tab-buttons button');\n-  const carousels = section.querySelectorAll('.product-carousel');\n+  sections.forEach(section => {\n+    const buttons = section.querySelectorAll(\".tab-button\");\n+    const carousels = section.querySelectorAll(\".product-carousel\");\n \n-  buttons.forEach(button => {\n-    button.addEventListener('click', () => {\n-      const targetTab = button.dataset.tab;\n+    buttons.forEach(button => {\n+      button.addEventListener(\"click\", () => {\n+        const target = button.dataset.tab;\n \n-      buttons.forEach(btn => btn.classList.remove('active'));\n-      button.classList.add('active');\n+        buttons.forEach(btn => btn.classList.remove(\"active\"));\n+        button.classList.add(\"active\");\n \n-      carousels.forEach(carousel => {\n-        if (carousel.dataset.tab === targetTab) {\n-          carousel.classList.add('active');\n-        } else {\n-          carousel.classList.remove('active');\n-        }\n+        carousels.forEach(carousel => {\n+          carousel.classList.toggle(\"active\", carousel.dataset.tab === target);\n+        });\n       });\n     });\n   });\n-\n-  if (typeof Flickity !== 'undefined') {\n-    carousels.forEach(carousel => {\n-      if (!carousel.classList.contains('flickity-enabled')) {\n-        new Flickity(carousel, JSON.parse(carousel.getAttribute('data-flickity-options')));\n-      }\n-    });\n-  }\n-}\n-\n-function loadFlickityAndInitSection(section) {\n-  if (typeof Flickity === 'undefined') {\n-    const script = document.createElement('script');\n-    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n-    script.onload = () => initCollectionTabsSlider(section);\n-    document.head.appendChild(script);\n-  } else {\n-    initCollectionTabsSlider(section);\n-  }\n-}\n-\n-document.addEventListener('DOMContentLoaded', () => {\n-  document.querySelectorAll('.collection-tabs-section').forEach(section => {\n-    loadFlickityAndInitSection(section);\n-  });\n });\n-\n-document.addEventListener('shopify:section:load', (event) => {\n-  const section = event.target.querySelector('.collection-tabs-section');\n-  loadFlickityAndInitSection(section);\n-});\n {% endjavascript %}\n"
                },
                {
                    "date": 1749461440895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,27 +63,8 @@\n         {\n           \"type\": \"collection\",\n           \"id\": \"collection\",\n           \"label\": \"Collection\"\n-        },\n-        {\n-          \"type\": \"range\",\n-          \"id\": \"product_limit\",\n-          \"label\": \"Number of Products\",\n-          \"min\": 1,\n-          \"max\": 20,\n-          \"default\": 10\n-        },\n-        {\n-          \"type\": \"select\",\n-          \"id\": \"product_card_size\",\n-          \"label\": \"Product Card Size\",\n-          \"default\": \"medium\",\n-          \"options\": [\n-            { \"value\": \"small\", \"label\": \"Small\" },\n-            { \"value\": \"medium\", \"label\": \"Medium\" },\n-            { \"value\": \"large\", \"label\": \"Large\" }\n-          ]\n         }\n       ]\n     }\n   ],\n@@ -97,9 +78,9 @@\n {% endschema %}\n \n <section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n   <div class=\"left-image\">\n-    {% if section.settings.left_image %}\n+    {% if section.settings.left_image != blank %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n   </div>\n \n@@ -118,26 +99,30 @@\n \n     <div class=\"tab-buttons\">\n       {% for block in section.blocks %}\n         <button\n-          class=\"tab-button {% if forloop.first %}active{% endif %}\"\n-          data-tab=\"tab-{{ forloop.index0 }}\">\n+          class=\"{% if forloop.first %}active{% endif %}\"\n+          data-tab=\"tab-{{ forloop.index }}\">\n           {{ block.settings.tab_name }}\n         </button>\n       {% endfor %}\n     </div>\n \n     {% for block in section.blocks %}\n-      {% assign collection_handle = block.settings.collection.handle %}\n-      {% assign block_collection = collections[collection_handle] %}\n+      {% assign block_collection = collections[block.settings.collection] %}\n       <div\n-        class=\"product-carousel {% if forloop.first %}active{% endif %}\"\n-        data-tab=\"tab-{{ forloop.index0 }}\"\n+        class=\"product-carousel js-flickity {% if forloop.first %}active{% endif %}\"\n+        data-tab=\"tab-{{ forloop.index }}\"\n+        data-flickity-options='{\n+          \"contain\": true,\n+          \"wrapAround\": true,\n+          \"pageDots\": false,\n+          \"prevNextButtons\": {{ section.settings.show_arrows }}\n+        }'\n       >\n         {% if block_collection != blank %}\n-          {% assign limit = block.settings.product_limit | default: 10 %}\n-          {% for product in block_collection.products limit: limit %}\n-            <div class=\"product-card product-size-{{ block.settings.product_card_size }}\">\n+          {% for product in block_collection.products limit: 10 %}\n+            <div class=\"product-card\">\n               <a href=\"{{ product.url }}\">\n                 <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n                 <h4>{{ product.title }}</h4>\n                 <p>From {{ product.price | money }}</p>\n@@ -152,26 +137,58 @@\n   </div>\n </section>\n \n {% javascript %}\n-document.addEventListener(\"DOMContentLoaded\", function () {\n-  const sections = document.querySelectorAll(\".collection-tabs-section\");\n+function initCollectionTabsSlider(section) {\n+  if (!section) return;\n \n-  sections.forEach(section => {\n-    const buttons = section.querySelectorAll(\".tab-button\");\n-    const carousels = section.querySelectorAll(\".product-carousel\");\n+  const buttons = section.querySelectorAll('.tab-buttons button');\n+  const carousels = section.querySelectorAll('.product-carousel');\n \n-    buttons.forEach(button => {\n-      button.addEventListener(\"click\", () => {\n-        const target = button.dataset.tab;\n+  buttons.forEach(button => {\n+    button.addEventListener('click', () => {\n+      const targetTab = button.dataset.tab;\n \n-        buttons.forEach(btn => btn.classList.remove(\"active\"));\n-        button.classList.add(\"active\");\n+      buttons.forEach(btn => btn.classList.remove('active'));\n+      button.classList.add('active');\n \n-        carousels.forEach(carousel => {\n-          carousel.classList.toggle(\"active\", carousel.dataset.tab === target);\n-        });\n+      carousels.forEach(carousel => {\n+        if (carousel.dataset.tab === targetTab) {\n+          carousel.classList.add('active');\n+        } else {\n+          carousel.classList.remove('active');\n+        }\n       });\n     });\n   });\n+\n+  if (typeof Flickity !== 'undefined') {\n+    carousels.forEach(carousel => {\n+      if (!carousel.classList.contains('flickity-enabled')) {\n+        new Flickity(carousel, JSON.parse(carousel.getAttribute('data-flickity-options')));\n+      }\n+    });\n+  }\n+}\n+\n+function loadFlickityAndInitSection(section) {\n+  if (typeof Flickity === 'undefined') {\n+    const script = document.createElement('script');\n+    script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n+    script.onload = () => initCollectionTabsSlider(section);\n+    document.head.appendChild(script);\n+  } else {\n+    initCollectionTabsSlider(section);\n+  }\n+}\n+\n+document.addEventListener('DOMContentLoaded', () => {\n+  document.querySelectorAll('.collection-tabs-section').forEach(section => {\n+    loadFlickityAndInitSection(section);\n+  });\n });\n+\n+document.addEventListener('shopify:section:load', (event) => {\n+  const section = event.target.querySelector('.collection-tabs-section');\n+  loadFlickityAndInitSection(section);\n+});\n {% endjavascript %}\n"
                },
                {
                    "date": 1752229546645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n   ]\n }\n {% endschema %}\n \n-<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n+<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\" style=\"padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px; margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px\">\n   <div class=\"left-image\">\n     {% if section.settings.left_image != blank %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n"
                },
                {
                    "date": 1752232340264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,14 +35,22 @@\n       \"label\": \"Shop All Button URL\"\n     },\n     {\n       \"type\": \"checkbox\",\n-      \"id\": \"show_arrows\",\n-      \"label\": \"Show slider arrows\",\n+      \"id\": \"show_arrows_mobile\",\n+      \"label\": \"Show arrows on Mobile\",\n       \"default\": true\n     },\n-    { \"type\": \"range\", \"id\": \"padding_top\", \"label\": \"Padding top\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n-    { \"type\": \"range\", \"id\": \"padding_bottom\", \"label\": \"Padding bottom\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    {\n+      \"type\": \"checkbox\",\n+      \"id\": \"show_arrows_desktop\",\n+      \"label\": \"Show arrows on Desktop\",\n+      \"default\": true\n+    },\n+    { \"type\": \"range\", \"id\": \"padding_top\", \"label\": \"Padding top (Desktop)\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"padding_bottom\", \"label\": \"Padding bottom (Desktop)\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"padding_top_mobile\", \"label\": \"Padding top (Mobile)\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n+    { \"type\": \"range\", \"id\": \"padding_bottom_mobile\", \"label\": \"Padding bottom (Mobile)\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n     { \"type\": \"range\", \"id\": \"padding_left\", \"label\": \"Padding left\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n     { \"type\": \"range\", \"id\": \"padding_right\", \"label\": \"Padding right\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n     { \"type\": \"range\", \"id\": \"margin_top\", \"label\": \"Margin top\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n     { \"type\": \"range\", \"id\": \"margin_bottom\", \"label\": \"Margin bottom\", \"min\": 0, \"max\": 100, \"step\": 5, \"default\": 0, \"unit\": \"px\" },\n@@ -76,9 +84,27 @@\n   ]\n }\n {% endschema %}\n \n-<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\" style=\"padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px; margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px\">\n+\n+<style>\n+  .collection-tabs-section {\n+    padding-top: {{ section.settings.padding_top }}px;\n+    padding-bottom: {{ section.settings.padding_bottom }}px;\n+    padding-left: {{ section.settings.padding_left }}px;\n+    padding-right: {{ section.settings.padding_right }}px;\n+    margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px;\n+  }\n+\n+  @media (max-width: 768px) {\n+    .collection-tabs-section {\n+      padding-top: {{ section.settings.padding_top_mobile }}px;\n+      padding-bottom: {{ section.settings.padding_bottom_mobile }}px;\n+    }\n+  }\n+</style>\n+\n+<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n   <div class=\"left-image\">\n     {% if section.settings.left_image != blank %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n@@ -114,11 +140,12 @@\n         data-tab=\"tab-{{ forloop.index }}\"\n         data-flickity-options='{\n           \"contain\": true,\n           \"wrapAround\": true,\n-          \"pageDots\": false,\n-          \"prevNextButtons\": {{ section.settings.show_arrows }}\n+          \"pageDots\": false\n         }'\n+        data-arrows-mobile=\"{{ section.settings.show_arrows_mobile }}\"\n+        data-arrows-desktop=\"{{ section.settings.show_arrows_desktop }}\"\n       >\n         {% if block_collection != blank %}\n           {% for product in block_collection.products limit: 10 %}\n             <div class=\"product-card\">\n@@ -163,9 +190,16 @@\n \n   if (typeof Flickity !== 'undefined') {\n     carousels.forEach(carousel => {\n       if (!carousel.classList.contains('flickity-enabled')) {\n-        new Flickity(carousel, JSON.parse(carousel.getAttribute('data-flickity-options')));\n+        const flickityOptions = JSON.parse(carousel.getAttribute('data-flickity-options'));\n+        const showArrowsMobile = carousel.dataset.arrowsMobile === 'true';\n+        const showArrowsDesktop = carousel.dataset.arrowsDesktop === 'true';\n+        const isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\n+\n+        flickityOptions.prevNextButtons = isMobile ? showArrowsMobile : showArrowsDesktop;\n+\n+        new Flickity(carousel, flickityOptions);\n       }\n     });\n   }\n }\n"
                },
                {
                    "date": 1752232517660,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -102,9 +102,9 @@\n     }\n   }\n </style>\n \n-<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\">\n+<section class=\"collection-tabs-section section_width_{{ section.settings.section_width }}\" style=\"padding: {{ section.settings.padding_top }}px {{ section.settings.padding_right }}px {{ section.settings.padding_bottom }}px {{ section.settings.padding_left }}px; margin: {{ section.settings.margin_top }}px {{ section.settings.margin_right }}px {{ section.settings.margin_bottom }}px {{ section.settings.margin_left }}px padding: {{ section.settings.padding_top_mobile }}px {{ section.settings.padding_bottom_mobile }}px\">\n   <div class=\"left-image\">\n     {% if section.settings.left_image != blank %}\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n"
                },
                {
                    "date": 1752232619138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -187,21 +187,36 @@\n       });\n     });\n   });\n \n-  if (typeof Flickity !== 'undefined') {\n+  carousels.forEach(carousel => {\n+    setupFlickity(carousel);\n+  });\n+\n+  // Re-init on resize to handle arrow changes\n+  window.addEventListener('resize', () => {\n     carousels.forEach(carousel => {\n-      if (!carousel.classList.contains('flickity-enabled')) {\n-        const flickityOptions = JSON.parse(carousel.getAttribute('data-flickity-options'));\n-        const showArrowsMobile = carousel.dataset.arrowsMobile === 'true';\n-        const showArrowsDesktop = carousel.dataset.arrowsDesktop === 'true';\n-        const isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\n+      destroyFlickity(carousel);\n+      setupFlickity(carousel);\n+    });\n+  });\n+}\n \n-        flickityOptions.prevNextButtons = isMobile ? showArrowsMobile : showArrowsDesktop;\n+function setupFlickity(carousel) {\n+  const flickityOptions = JSON.parse(carousel.getAttribute('data-flickity-options'));\n+  const showArrowsMobile = carousel.dataset.arrowsMobile === 'true';\n+  const showArrowsDesktop = carousel.dataset.arrowsDesktop === 'true';\n+  const isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\n \n-        new Flickity(carousel, flickityOptions);\n-      }\n-    });\n+  flickityOptions.prevNextButtons = isMobile ? showArrowsMobile : showArrowsDesktop;\n+\n+  carousel.flickityInstance = new Flickity(carousel, flickityOptions);\n+}\n+\n+function destroyFlickity(carousel) {\n+  if (carousel.flickityInstance) {\n+    carousel.flickityInstance.destroy();\n+    carousel.flickityInstance = null;\n   }\n }\n \n function loadFlickityAndInitSection(section) {\n"
                },
                {
                    "date": 1752232725485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -188,38 +188,52 @@\n     });\n   });\n \n   carousels.forEach(carousel => {\n-    setupFlickity(carousel);\n+    initFlickityWithViewport(carousel);\n   });\n \n-  // Re-init on resize to handle arrow changes\n+  // Debounced resize handling\n+  let resizeTimeout;\n   window.addEventListener('resize', () => {\n-    carousels.forEach(carousel => {\n-      destroyFlickity(carousel);\n-      setupFlickity(carousel);\n-    });\n+    clearTimeout(resizeTimeout);\n+    resizeTimeout = setTimeout(() => {\n+      carousels.forEach(carousel => {\n+        maybeReinitFlickity(carousel);\n+      });\n+    }, 200);\n   });\n }\n \n-function setupFlickity(carousel) {\n+function initFlickityWithViewport(carousel) {\n   const flickityOptions = JSON.parse(carousel.getAttribute('data-flickity-options'));\n   const showArrowsMobile = carousel.dataset.arrowsMobile === 'true';\n   const showArrowsDesktop = carousel.dataset.arrowsDesktop === 'true';\n   const isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\n \n   flickityOptions.prevNextButtons = isMobile ? showArrowsMobile : showArrowsDesktop;\n \n-  carousel.flickityInstance = new Flickity(carousel, flickityOptions);\n-}\n+  // Store which mode it's using\n+  carousel._flickityBreakpoint = isMobile ? 'mobile' : 'desktop';\n \n-function destroyFlickity(carousel) {\n+  // Destroy any old\n   if (carousel.flickityInstance) {\n     carousel.flickityInstance.destroy();\n-    carousel.flickityInstance = null;\n   }\n+\n+  // Create new\n+  carousel.flickityInstance = new Flickity(carousel, flickityOptions);\n }\n \n+function maybeReinitFlickity(carousel) {\n+  const isMobile = window.matchMedia(\"(max-width: 768px)\").matches;\n+  const currentBreakpoint = isMobile ? 'mobile' : 'desktop';\n+\n+  if (carousel._flickityBreakpoint !== currentBreakpoint) {\n+    initFlickityWithViewport(carousel);\n+  }\n+}\n+\n function loadFlickityAndInitSection(section) {\n   if (typeof Flickity === 'undefined') {\n     const script = document.createElement('script');\n     script.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n"
                },
                {
                    "date": 1752232895082,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,8 +109,28 @@\n       <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n     {% endif %}\n   </div>\n \n+  {% if section.settings.show_arrows_desktop == false %}\n+  <style>\n+    @media (min-width: 769px) {\n+      .collection-tabs-section .flickity-prev-next-button {\n+        display: none !important;\n+      }\n+    }\n+  </style>\n+{% endif %}\n+\n+{% if section.settings.show_arrows_mobile == false %}\n+  <style>\n+    @media (max-width: 768px) {\n+      .collection-tabs-section .flickity-prev-next-button {\n+        display: none !important;\n+      }\n+    }\n+  </style>\n+{% endif %}\n+\n   <div class=\"right-content\">\n     <div class=\"tab-header\">\n       <div class=\"tab-title-group\">\n         <div class=\"tab-titles\">\n"
                }
            ],
            "date": 1748433449655,
            "name": "Commit-0",
            "content": "{% schema %}\n{\n  \"name\": \"Collection Tabs Slider\",\n  \"settings\": [\n    {\n      \"type\": \"image_picker\",\n      \"id\": \"left_image\",\n      \"label\": \"Left Side Image\"\n    },\n    {\n      \"type\": \"text\",\n      \"id\": \"subheading\",\n      \"label\": \"Subheading\",\n      \"default\": \"Customer Favorites\"\n    },\n    {\n      \"type\": \"text\",\n      \"id\": \"heading\",\n      \"label\": \"Heading\",\n      \"default\": \"Best Sellers\"\n    },\n    {\n      \"type\": \"url\",\n      \"id\": \"shop_all_url\",\n      \"label\": \"Shop All Button URL\"\n    },\n    {\n      \"type\": \"checkbox\",\n      \"id\": \"show_arrows\",\n      \"label\": \"Show slider arrows\",\n      \"default\": true\n    },\n    {\n      \"type\": \"select\",\n      \"id\": \"section_width\",\n      \"label\": \"Section Width\",\n      \"default\": \"standard\",\n      \"options\": [\n        {\n          \"value\": \"standard\",\n          \"label\": \"50% Width\"\n        },\n        {\n          \"value\": \"full\",\n          \"label\": \"Full Width\"\n        }\n      ]\n    }\n  ],\n  \"blocks\": [\n    {\n      \"type\": \"tab\",\n      \"name\": \"Collection Tab\",\n      \"settings\": [\n        {\n          \"type\": \"text\",\n          \"id\": \"tab_name\",\n          \"label\": \"Tab Label\",\n          \"default\": \"Best Sellers\"\n        },\n        {\n          \"type\": \"collection\",\n          \"id\": \"collection\",\n          \"label\": \"Collection\"\n        }\n      ]\n    }\n  ],\n  \"presets\": [\n    {\n      \"name\": \"Collection Tabs Slider\",\n      \"category\": \"Somos Custom\"\n    }\n  ]\n}\n{% endschema %}\n\n{% stylesheet %}\n.collection-tabs-section {\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  gap: 2rem;\n  padding: 2rem 0;\n  margin: 0 auto;\n}\n\n.collection-tabs-section.standard {\n  max-width: 1200px;\n}\n\n.collection-tabs-section.full {\n  max-width: 100%;\n}\n\n.left-image img {\n  width: 100%;\n  max-width: 500px;\n  border-radius: 8px;\n}\n\n.right-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.tab-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.tab-title-group {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n}\n\n.tab-header h3 {\n  margin: 0;\n  font-size: 0.95rem;\n  color: #666;\n}\n\n.tab-header h2 {\n  margin: 0;\n  font-size: 2rem;\n}\n\n.shop-all-btn {\n  text-decoration: none;\n  padding: 0.4rem 0.9rem;\n  background-color: #000;\n  color: #fff;\n  border-radius: 4px;\n  font-size: 0.85rem;\n}\n\n.tab-buttons {\n  display: flex;\n  gap: 2rem;\n  margin: 1rem 0 1.5rem;\n  border-bottom: 2px solid #e5e5e5;\n}\n\n.tab-buttons button {\n  padding: 0.5rem 0;\n  background: none;\n  border: none;\n  border-bottom: 2px solid transparent;\n  font-size: 1rem;\n  font-weight: 600;\n  cursor: pointer;\n  color: #333;\n}\n\n.tab-buttons button.active {\n  border-bottom: 2px solid #000;\n  color: #000;\n}\n\n.product-carousel {\n  display: none;\n}\n\n.product-carousel.active {\n  display: block;\n}\n\n.flickity-viewport {\n  overflow: hidden;\n}\n\n.flickity-slider > .product-card {\n  width: 220px;\n  margin-right: 20px;\n}\n\n.product-card img {\n  width: 100%;\n  border-radius: 8px;\n}\n\n.product-card h4 {\n  font-size: 0.9rem;\n  margin: 0.5rem 0 0.3rem;\n}\n\n.product-card p {\n  font-size: 0.85rem;\n  color: #666;\n  margin: 0;\n}\n{% endstylesheet %}\n\n<section class=\"collection-tabs-section {{ section.settings.section_width }}\">\n  <div class=\"left-image\">\n    {% if section.settings.left_image != blank %}\n      <img src=\"{{ section.settings.left_image | image_url: width: 600 }}\" alt=\"Left Image\">\n    {% endif %}\n  </div>\n\n  <div class=\"right-content\">\n    <div class=\"tab-header\">\n      <div class=\"tab-title-group\">\n        <div>\n          <h3>{{ section.settings.subheading }}</h3>\n          <h2>{{ section.settings.heading }}</h2>\n        </div>\n        {% if section.settings.shop_all_url %}\n          <a href=\"{{ section.settings.shop_all_url }}\" class=\"shop-all-btn\">Shop All</a>\n        {% endif %}\n      </div>\n    </div>\n\n    <div class=\"tab-buttons\">\n      {% for block in section.blocks %}\n        <button\n          class=\"{% if forloop.first %}active{% endif %}\"\n          data-tab=\"tab-{{ forloop.index }}\">\n          {{ block.settings.tab_name }}\n        </button>\n      {% endfor %}\n    </div>\n\n    {% for block in section.blocks %}\n      {% assign collection = collections[block.settings.collection] %}\n      <div\n        class=\"product-carousel js-flickity {% if forloop.first %}active{% endif %}\"\n        data-tab=\"tab-{{ forloop.index }}\"\n        data-flickity-options='{\n          \"contain\": true,\n          \"wrapAround\": true,\n          \"pageDots\": false,\n          \"prevNextButtons\": {{ section.settings.show_arrows }}\n        }'\n      >\n        {% for product in collection.products limit: 10 %}\n          <div class=\"product-card\">\n            <a href=\"{{ product.url }}\">\n              <img src=\"{{ product.featured_image | image_url: width: 300 }}\" alt=\"{{ product.title }}\">\n              <h4>{{ product.title }}</h4>\n              <p>From {{ product.price | money }}</p>\n            </a>\n          </div>\n        {% endfor %}\n      </div>\n    {% endfor %}\n  </div>\n</section>\n\n{% javascript %}\n  function initializeTabs() {\n    const buttons = document.querySelectorAll('.tab-buttons button');\n    const carousels = document.querySelectorAll('.product-carousel');\n\n    buttons.forEach(button => {\n      button.addEventListener('click', function () {\n        const tab = this.dataset.tab;\n\n        buttons.forEach(btn => btn.classList.remove('active'));\n        this.classList.add('active');\n\n        carousels.forEach(carousel => {\n          if (carousel.dataset.tab === tab) {\n            carousel.classList.add('active');\n          } else {\n            carousel.classList.remove('active');\n          }\n        });\n      });\n    });\n  }\n\n  function initializeFlickity() {\n    const flickityElems = document.querySelectorAll('.js-flickity');\n    flickityElems.forEach(el => {\n      if (!el.classList.contains('flickity-enabled')) {\n        new Flickity(el, JSON.parse(el.getAttribute('data-flickity-options')));\n      }\n    });\n  }\n\n  function loadFlickityAndInit() {\n    if (typeof Flickity === 'undefined') {\n      const flickityScript = document.createElement('script');\n      flickityScript.src = 'https://cdnjs.cloudflare.com/ajax/libs/flickity/2.3.0/flickity.pkgd.min.js';\n      flickityScript.onload = () => {\n        initializeFlickity();\n        initializeTabs();\n      };\n      document.head.appendChild(flickityScript);\n    } else {\n      initializeFlickity();\n      initializeTabs();\n    }\n  }\n\n  document.addEventListener('DOMContentLoaded', loadFlickityAndInit);\n{% endjavascript %}\n"
        }
    ]
}